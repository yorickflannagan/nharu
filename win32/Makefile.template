# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
# Windows makefile for Nharu project
# Copyleft (C) 2016 by The Crypthing Initiative
# Authors:
#	diego.sohsten@caixa.gov.br
# 	yorick.flannagan@gmail.com
#
# Required environment
#	That one generated by vcvarsall.bat
# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
CC     = cl
LINK   = link
IMPLIB = lib
MC     = mc
RC     = rc

#
# Generated by script
# # # # # # # # # # #
OPENSSL     = C:\Users\developer\dev\3rdparty\openssl
LIBIDN      = C:\Users\developer\dev\3rdparty\idn
HOME        = C:\Users\developer\dev\nharu
JAVA_HOME   = C:\Users\developer\java
VERSION     = 1.1.10
ANT_BAT     = C:\Users\developer\dev\3rdparty\apache-ant-1.9.9\bin\ant.bat
ANT_CONTRIB = C:\Users\developer\dev\3rdparty\ant-contrib\ant-contrib-1.0b3.jar
JRE_7       = C:\Users\developer\jdk7\jre\lib\rt.jar
PREFIX      = C:\Users\developer\dev\3rdparty\nharu

#
# Target definitions
# # # # # # # # # # #
TARGET       =
T_CFLAGS     =
T_CVARS      =
T_LIB_LFLAGS =
T_JCA_LFLAGS =
T_TST_LFLAGS =

#
# Local variables
# # # # # # # # # # #
LIB_SRC     = $(HOME)\src
NHU_HEADERS = $(HOME)\include
JCA_SRC     = $(HOME)\jca\native
JVA_HEADERS = $(JCA_SRC)
P11_HEADERS = $(HOME)
TST_SRC     = $(HOME)\test
OBJ         = $(HOME)\bin\$(TARGET)
OUT         = $(HOME)\dist\$(TARGET)
SSL_INCLUDE = /I"$(OPENSSL)\include"
IDN_INCLUDE = /I"$(LIBIDN)\include"
JDK_INCLUDE = /I"$(JAVA_HOME)\include" /I"$(JAVA_HOME)\include\win32"
SSL_LIBPATH = /LIBPATH:"$(OPENSSL)\lib"
IDN_LIBPATH = /LIBPATH:"$(LIBIDN)\lib"

!IF DEFINED(DEBUG)
!include <debug.mak>
!ELSE
!include <release.mak>
!ENDIF

#
# Common definitions
# # # # # # # # # # #
C_CFLAGS    = /c /FC /permissive- /GS /TC /analyze- /Gm- /Zc:wchar_t /Zc:inline /Zc:forScope /sdl /fp:precise /WX- /Gd /Oy- /nologo /diagnostics:classic /wd"4018" /wd"4389" /wd"4244" /wd"4005" /wd"4142" /wd"4701" /wd"4703" /wd"4706"
C_CVARS     = /D "WIN32" /D "_WIN32" /D "_WINDOWS" /D "_UNICODE" /D "UNICODE" /D "_CRT_SECURE_NO_WARNINGS"
C_LFLAGS    = /NOLOGO

#
# Static library
# # # # # # # # # # #
C_LIB_FLAGS = $(T_CFLAGS) $(C_CFLAGS)
C_LIB_VARS  = $(T_CVARS) $(C_CVARS) /D "_LIB"
L_LIB_FLAGS = $(T_LIB_LFLAGS) $(C_LFLAGS)
LIB_SOURCE  = $(LIB_SRC)\cms_env.c $(LIB_SRC)\cms_sd.c $(LIB_SRC)\crypto.c $(LIB_SRC)\libgfshare.c $(LIB_SRC)\parser.c $(LIB_SRC)\pkibr.c $(LIB_SRC)\pkix.c $(LIB_SRC)\sysservc.c $(LIB_SRC)\x509.c
LIB_HEADERS = $(LIB_SRC) $(NHU_HEADERS) $(P11_HEADERS)
LIB_INCLUDE = /I"$(NHU_HEADERS)" /I"$(LIB_SRC)" /I"$(P11_HEADERS)" $(SSL_INCLUDE) $(IDN_INCLUDE)

#
# Dinamic JCA library
# # # # # # # # # # #
C_JCA_FLAGS = $(T_CFLAGS) $(C_CFLAGS) 
C_JCA_CVARS = /D "_USRDLL" /D "_WINDLL" /D "NHARUJCA_EXPORTS"
L_JCA_FLAGS = $(T_JCA_LFLAGS) $(C_LFLAGS) /DLL /SUBSYSTEM:WINDOWS
JCA_SOURCE  = $(JCA_SRC)\8x256_tables.c $(JCA_SRC)\cdecode.c $(JCA_SRC)\cencode.c $(JCA_SRC)\cms_glue.c $(JCA_SRC)\crc.c $(JCA_SRC)\crypto_glue.c $(JCA_SRC)\general.c $(JCA_SRC)\versionjca.c $(JCA_SRC)\x509_glue.c $(JCA_SRC)\version.c
JCA_HEADERS = $(LIB_HEADERS) $(JVA_HEADERS)
JCA_INCLUDE = $(LIB_INCLUDE) $(JDK_INCLUDE) /I"$(JVA_HEADERS)"
JCA_LIBPATH = /LIBPATH:"$(OUT)" $(SSL_LIBPATH) $(IDN_LIBPATH)
JCA_IMPLIBS = "nharu.lib" "libidn.lib" "libcrypto.lib" "crypt32.lib" "ws2_32.lib" "kernel32.lib" "user32.lib" "gdi32.lib" "winspool.lib" "comdlg32.lib" "advapi32.lib" "shell32.lib" "ole32.lib" "oleaut32.lib" "uuid.lib" "odbc32.lib" "odbccp32.lib"

#
# Test application
# # # # # # # # # # #
C_TST_FLAGS = $(C_LIB_FLAGS)
C_TST_VARS  = $(T_CVARS) $(C_CVARS) /D "_CONSOLE"
L_TST_FLAGS = $(T_TST_LFLAGS) $(C_LFLAGS) /SUBSYSTEM:CONSOLE
TST_SOURCE  = $(TST_SRC)\cadest.c $(TST_SRC)\cert_t.c $(TST_SRC)\cms_t.c $(TST_SRC)\crl_t.c $(TST_SRC)\crypto_t.c $(TST_SRC)\nmain.c $(TST_SRC)\parser_t.c
TST_HEADERS = $(LIB_HEADERS) $(TST_SRC)
TST_INCLUDE = $(LIB_INCLUDE) /I"$(TST_SRC)"
TST_LIBPATH = $(JCA_LIBPATH)
TST_IMPLIBS = $(JCA_IMPLIBS)


#
# Default target
# # # # # # # # # # #
ALL: PREPARE $(OUT)\nharu.lib 
ALL: MAKEVERSION $(OUT)\nharujca.dll
ALL: $(OUT)\test.exe
ALL: MAKEJAR


#
# Linker targets
# # # # # # # # # # #
$(OUT)\nharu.lib: $(LIB_SOURCE:.c=.obj)
	$(IMPLIB) $(L_LIB_FLAGS) /OUT:$(OUT)\nharu.lib @<<
$(OBJ)\cms_env.obj
$(OBJ)\cms_sd.obj
$(OBJ)\crypto.obj
$(OBJ)\libgfshare.obj
$(OBJ)\parser.obj
$(OBJ)\pkibr.obj
$(OBJ)\pkix.obj
$(OBJ)\sysservc.obj
$(OBJ)\x509.obj
<<

$(OUT)\nharujca.dll: $(JCA_SOURCE:.c=.obj)
	$(LINK) $(L_JCA_FLAGS) $(JCA_IMPLIBS) $(JCA_LIBPATH) /OUT:$(OUT)\nharujca.dll @<<
$(OBJ)\8x256_tables.obj
$(OBJ)\cdecode.obj
$(OBJ)\cencode.obj
$(OBJ)\cms_glue.obj
$(OBJ)\crc.obj
$(OBJ)\crypto_glue.obj
$(OBJ)\general.obj
$(OBJ)\versionjca.obj
$(OBJ)\x509_glue.obj
$(OBJ)\version.obj
<<

$(OUT)\test.exe: $(TST_SOURCE:.c=.obj)
	$(LINK) $(L_TST_FLAGS) $(TST_IMPLIBS) $(TST_LIBPATH) /OUT:$(OUT)\test.exe @<<
$(OBJ)\cadest.obj
$(OBJ)\cert_t.obj
$(OBJ)\cms_t.obj
$(OBJ)\crl_t.obj
$(OBJ)\crypto_t.obj
$(OBJ)\nmain.obj
$(OBJ)\parser_t.obj
<<


#
# Compiler targets
# # # # # # # # # # #
$(LIB_SOURCE:.c=.obj): $(LIB_SOURCE) $(LIB_HEADERS)
	$(CC) $(C_LIB_FLAGS) $(C_LIB_VARS) $(LIB_INCLUDE) /Fo$(OBJ)\ %s

$(JCA_SOURCE:.c=.obj): $(JCA_SOURCE) $(JCA_HEADERS)
	$(CC) $(C_JCA_FLAGS) $(C_JCA_CVARS) $(JCA_INCLUDE) /Fo$(OBJ)\ %s

$(TST_SOURCE:.c=.obj): $(TST_SOURCE) $(TST_HEADERS)
	$(CC) $(C_TST_FLAGS) $(C_TST_VARS) $(TST_INCLUDE) /Fo$(OBJ)\ %s

#
# Phony targets
# # # # # # # # # # #
PREPARE:
	-SETLOCAL EnableExtensions
	-IF NOT EXIST "$(HOME)\bin\$(TARGET)"  MKDIR "$(HOME)\bin\$(TARGET)"
	-IF NOT EXIST "$(HOME)\dist\$(TARGET)" MKDIR "$(HOME)\dist\$(TARGET)"
	-ENDLOCAL

CLEAN:
	-RMDIR /S /Q "$(HOME)\bin"
	-RMDIR /S /Q "$(HOME)\dist"
	-DEL /Q "$(JCA_SRC)\version.c"
	-"$(ANT_BAT)" -DANT_CONTRIB_LIB="$(ANT_CONTRIB)" -DVERSION=$(VERSION) -DJRE_7="$(JRE_7)" -DPREFIX="$(PREFIX)" -D$(TARGET_ANT) -buildfile "$(HOME)\jca\build.xml" clean

MAKEVERSION:
	-"$(HOME)\jca\make_version.bat" $(VERSION) "$(JCA_SRC)"

MAKEJAR:
	-SET JAVA_HOME=$(JAVA_HOME)
	-"$(ANT_BAT)" -DANT_CONTRIB_LIB="$(ANT_CONTRIB)" -DVERSION=$(VERSION) -DJRE_7="$(JRE_7)" -DPREFIX="$(PREFIX)" -D$(TARGET_ANT) -buildfile "$(HOME)\jca\build.xml"
	-SET JAVA_HOME=

TEST:
	-"$(OUT)\test.exe"
	-"$(JAVA_HOME)\bin\java.exe" -classpath "$(OUT)\nharujca.jar" org.crypthing.security.provider.NharuProvider "$(TST_SRC)\repo\signer.p12" "$(TST_SRC)\repo\trust.jks"

INSTALL:
	-SETLOCAL EnableExtensions
	-IF NOT EXIST "$(PREFIX)\include\pkcs11" MKDIR "$(PREFIX)\include\pkcs11"
	-IF NOT EXIST "$(PREFIX)\libs"           MKDIR "$(PREFIX)\libs"
	-COPY /Y "$(OUT)\nharu.lib"              "$(PREFIX)\libs"
	-COPY /Y "$(OUT)\nharujca.dll"           "$(PREFIX)\libs"
	-COPY /Y "$(NHU_HEADERS)\*.h"            "$(PREFIX)\include"
	-COPY /Y "$(P11_HEADERS)\pkcs11\*.h"     "$(PREFIX)\include\pkcs11"
	-"$(ANT_BAT)" -DANT_CONTRIB_LIB="$(ANT_CONTRIB)" -DVERSION=$(VERSION) -DJRE_7="$(JRE_7)" -DPREFIX="$(PREFIX)" -D$(TARGET_ANT) -buildfile "$(HOME)\jca\build.xml" install
	-ENDLOCAL

DISTCLEAN:
	-RMDIR /S /Q "$(PREFIX)"
