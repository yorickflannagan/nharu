{
   <split_sharea>
   Memcheck:Cond
   ...
   fun:split
   fun:test_secret_sharing
   fun:main
}
{
   <split_shareb>
   Memcheck:Value4
   ...
   fun:split
   fun:test_secret_sharing
   fun:main
}
{
   <join_sharea>
   Memcheck:Cond
   ...
   fun:join
   fun:test_secret_sharing
   fun:main
}
{
   <join_shareb>
   Memcheck:Value4
   ...
   fun:join
   fun:test_secret_sharing
   fun:main
}
{
   <new_iva>
   Memcheck:Value4
   fun:_x86_DES_encrypt
}
{
   <new_ivb>
   Memcheck:Value4
   fun:_x86_DES_decrypt
}
{
   <new_ivc>
   Memcheck:Cond
   fun:encrypt_this
   fun:test_encrypt
   fun:main
}
{
   <new_ivd>
   Memcheck:Cond
   fun:bn_mul_add_words
}

{
   <generate_key>
   Memcheck:Cond
   ...
   fun:test_encoding
   fun:test_encrypt
   fun:main
}
{
   <add_wordsa>
   Memcheck:Cond
   fun:bn_add_words
}
{
   <add_wordsb>
   Memcheck:Value4
   fun:bn_add_words
}

{
   <sub_wordsa>
   Memcheck:Value4
   fun:bn_sub_words
}
{
   <sub_wordsb>
   Memcheck:Cond
   fun:bn_sub_words
}
{
   <mul_monta>
   Memcheck:Value4
   fun:bn_mul_mont
}
{
   <mul_montb>
   Memcheck:Cond
   fun:bn_mul_mont
}
{
   <sqr_comba8>
   Memcheck:Value4
   fun:bn_sqr_comba8
}
{
   <test_wrap_key>
   Memcheck:Cond
   fun:RSA_*
   ...
   fun:test_wrap_key
   fun:test_rsa
   fun:main
}
{
   <sub_part_words>
   Memcheck:Cond
   fun:bn_sub_part_words
}
{
   <NH_RSA_privkey_decrypt>
   Memcheck:Cond
   fun:NH_RSA_privkey_decrypt
   fun:test_wrap_key
   fun:test_rsa
   fun:main
}
{
   <test_encode_pubkey>
   Memcheck:Cond
   fun:BN_*
   ...
   fun:test_encode_pubkey
   fun:test_rsa
   fun:main
}
{
   <plainprivkeya>
   Memcheck:Cond
   fun:decode_bignum
   ...
   fun:test_encode_plainprivkey
   fun:test_rsa
   fun:main
}
{
   <plainprivkeyb>
   Memcheck:Cond
   fun:BN_*
   ...
   fun:test_encode_plainprivkey
   fun:test_rsa
   fun:main
}
{
   <mul_words>
   Memcheck:Cond
   fun:bn_mul_words
}
{
   <test_wrap_key_uniq>
   Memcheck:Cond
   fun:test_wrap_key
   fun:test_rsa
   fun:main
}
{
   <wrap_key_bcmp>
   Memcheck:Cond
   fun:bcmp
   ...
   fun:test_wrap_key
   fun:test_rsa
   fun:main
}
{
   <RSA_pubkey_encode>
   Memcheck:Value4
   fun:BN_*
   ...
   fun:NH_RSA_pubkey_encode
   fun:test_encode_pubkey
   fun:test_rsa
   fun:main
}
{
   <RSA_privkey_encode>
   Memcheck:Value4
   fun:BN_*
   ...
   fun:NH_RSA_privkey_encode
   ...
   fun:test_rsa
   fun:main
}
{
   <RSA_privkey_encodeb>
   Memcheck:Cond
   fun:BN_*
   ...
   fun:NH_RSA_privkey_encode
   ...
   fun:test_rsa
   fun:main
}
{
   <RSA_privkey_decode>
   Memcheck:Cond
   fun:BN_*
   ...
   fun:NH_RSA_privkey_decode
   ...
   fun:test_rsa
   fun:main
}
{
   <RSA_privkey_decode_value>
   Memcheck:Value4
   fun:BN_*
   ...
   fun:NH_RSA_privkey_decode
   ...
   fun:test_rsa
   fun:main
}
{
   <RSA_privkey_decode_case>
   Memcheck:Cond
   fun:bn_*
   ...
   fun:NH_RSA_privkey_decode
   ...
   fun:test_rsa
   fun:main
}
{
   <RSA_privkey_decode_crypto>
   Memcheck:Cond
   fun:CRYPTO_malloc
   ...
   fun:NH_RSA_privkey_decode
   ...
   fun:test_rsa
   fun:main
}
{
   <encryptedprivkey>
   Memcheck:Cond
   fun:BN_*
   ...
   fun:test_encode_encryptedprivkey
   fun:test_rsa
   fun:main
}
{
   <NH_RSA_privkey_decrypt>
   Memcheck:Cond
   fun:NH_RSA_privkey_decrypt
   fun:decrypt
   fun:cms_env_decrypt
   fun:test_openssl_cms_enveloped_data
   fun:main
}
{
   <EVP_CIPHER_CTX_set_key_length>
   Memcheck:Cond
   fun:EVP_CIPHER_CTX_set_key_length
   fun:init_cipher
   fun:NH_decrypt_init
   fun:cms_env_decrypt
   fun:test_openssl_cms_enveloped_data
   fun:main
}
{
   <test_enveloped_data>
   Memcheck:Cond
   fun:test_enveloped_data
   fun:main
}
{
   <test_enveloped_data_cmp>
   Memcheck:Cond
   fun:bcmp
   fun:test_enveloped_data
   fun:main
}
{
   <RSA_eay_public_encrypt>
   Memcheck:Cond
   fun:RSA_eay_public_encrypt
   fun:RSA_public_encrypt
   fun:NH_RSA_pubkey_encrypt
   fun:cms_env_key_trans_recip
   fun:test_enveloped_data
   fun:main
}
{
   <NH_RSA_privkey_decrypt>
   Memcheck:Cond
   fun:NH_RSA_privkey_decrypt
   fun:decrypt
   fun:cms_env_decrypt
   fun:test_enveloped_data
   fun:main
}

