package org.crypthing.security.cms;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.security.KeyStore;
import java.security.KeyStoreException;
import java.security.NoSuchAlgorithmException;
import java.security.UnrecoverableKeyException;
import java.security.cert.CertificateException;
import java.security.cert.X509Certificate;

import org.crypthing.security.cert.DERX509CollectionParams;
import org.crypthing.security.cert.NharuCertStore;
import org.crypthing.security.provider.NharuProvider;
import org.crypthing.security.x509.NharuX509Certificate;
import org.crypthing.security.x509.NharuX509Factory;
import org.crypthing.util.NharuArrays;

/**
 * CMS parsing facility
 * @author magut
 *
 */
public abstract class CMSDocument
{
	static { NharuProvider.isLoaded(); }
	enum CMSContentType
	{
		NH_UNKNOWN_CTYPE,
		NH_DATA_CTYPE,
		NH_SIGNED_DATA_CTYPE,
		NH_ENVELOPED_DATA_CTYPE,
		NH_DIGESTED_DATA_CTYPE,
		NH_ENCRYPTED_DATA_CTYPE,
		NH_AUTH_DATA_CTYPE;
		int getValue() { return ordinal() - 1; }
		public static CMSContentType getContentType(final int type)
		{
			switch (type)
			{
			case 0: return NH_DATA_CTYPE;
			case 1: return NH_SIGNED_DATA_CTYPE;
			case 2: return NH_ENVELOPED_DATA_CTYPE;
			case 3: return NH_DIGESTED_DATA_CTYPE;
			case 4: return NH_ENCRYPTED_DATA_CTYPE;
			case 5: return NH_AUTH_DATA_CTYPE;
			default: return NH_UNKNOWN_CTYPE;
			}
		}
	}

	/**
	 * Parses specified encoding into a CMS document. Only SignedData and EnvelopedData are currently supported.
	 * @param encoding - PEM or DER encoded CMS
	 * @return the proper type.
	 * @throws CMSException if could not parse encoding.
	 */
	@SuppressWarnings("unchecked")
	public static <T> T parse(final byte[] encoding) throws CMSException
	{
		switch (CMSContentType.getContentType(nhcmsDiscover(encoding)))
		{
		case NH_SIGNED_DATA_CTYPE: return (T) new CMSSignedData(encoding);
		case NH_ENVELOPED_DATA_CTYPE: return (T) new CMSEnvelopedData(encoding);
		case NH_UNKNOWN_CTYPE: throw new CMSParsingException("Invalid CMS document");
		default: throw new UnsupportedCMSTypeException();
		}
	}

	private static native int nhcmsDiscover(byte[] encoding);




	/*
	 * Basic tests
	 * ==================================
	 */
	private static final String TRUST_STORE_JKS =
		"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" +
		"9tqLWebqompiM6TJTSGdI52zDw/G+ivAoVa5LA==";
	private static final String OPENSSL_SIGNED_DER =
		"MIILBwYJKoZIhvcNAQcCoIIK+DCCCvQCAQExCTAHBgUrDgMCGjCCA/UGCSqGSIb3DQEHAaCC" +
		"A+YEggPiIwojIE1ha2VmaWxlIGZvciBLaXJpcGVtYQojIENvcHlsZWZ0IChDKSAyMDE1IGJ5" +
		"IFRoZSBDcnlwdGhpbmcgSW5pdGlhdGl2ZQojCiMgUmVxdWlyZWQgZW52aXJvbm1lbnQgKHJ1" +
		"biBzb3VyY2Uga2lyaXBlbWEtZW52KQojCU5IQVJVX0RJUjogTmhhcnUgcHJvamVjdCBsb2Nh" +
		"dGlvbgojCVRPS0VOX0RJUjogVG9rZW4gcHJvamVjdCBsb2NhdGlvbgojCU1LVE9LRU5fRElS" +
		"OiBNYWtlIFRva2VuT2JqZWN0IHByb2plY3QgbG9jYXRpb24KIwlURVNUX0RJUjogdGVzdCBh" +
		"cHBsaWNhdGlvbnMgYmFzZSBsb2NhdGlvbgojCU5IQVJVX1BSSjogTmhhcnUgcHJvamVjdCBu" +
		"YW1lCiMJVE9LRU5fUFJKOiBUb2tlbiBwcm9qZWN0IG5hbWUKCiMKU0hFTEwgPSAvYmluL2Jh" +
		"c2gKCmlmZXEgKCQoREVCVUcpLCAxKQpUTUFLRV9UQVJHRVQgPQplbHNlClRNQUtFX1RBUkdF" +
		"VCA9IGRvbm90aGluZwplbmRpZgoKLlBIT05ZIDogYWxsIGNsZWFuCmFsbDoKCSQoTUFLRSkg" +
		"LUMgJChOSEFSVV9ESVIpL3NyYyBERUJVRz0kKERFQlVHKSBBTElHTj0kKEFMSUdOKQoJJChN" +
		"QUtFKSAtQyAkKFRPS0VOX0RJUikvc3JjIERFQlVHPSQoREVCVUcpIEFMSUdOPSQoQUxJR04p" +
		"CgkkKE1BS0UpIC1DICQoTUtUT0tFTl9ESVIpL3NyYyBERUJVRz0kKERFQlVHKQoJJChNQUtF" +
		"KSAkKFRNQUtFX1RBUkdFVCkgLUMgJChURVNUX0RJUikvJChOSEFSVV9QUkopCgkkKE1BS0Up" +
		"ICQoVE1BS0VfVEFSR0VUKSAtQyAkKFRFU1RfRElSKS8kKEhTTV9CQVNFX1BSSikKCmNsZWFu" +
		"OgoJJChNQUtFKSBjbGVhbiAtQyAkKE5IQVJVX0RJUikvc3JjIERFQlVHPSQoREVCVUcpCgkk" +
		"KE1BS0UpIGNsZWFuIC1DICQoVE9LRU5fRElSKS9zcmMgREVCVUc9JChERUJVRykKCSQoTUFL" +
		"RSkgY2xlYW4gLUMgJChNS1RPS0VOX0RJUikvc3JjIERFQlVHPSQoREVCVUcpCgkkKE1BS0Up" +
		"IGNsZWFuIC1DICQoVEVTVF9ESVIpLyQoTkhBUlVfUFJKKQoJJChNQUtFKSBjbGVhbiAtQyAk" +
		"KFRFU1RfRElSKS8kKEhTTV9CQVNFX1BSSikKCqCCBOowggTmMIIDzqADAgECAgEAMA0GCSqG" +
		"SIb3DQEBCwUAMHIxCzAJBgNVBAYTAkJSMRMwEQYDVQQKEwpQS0kgQnJhemlsMR8wHQYDVQQL" +
		"ExZQS0kgUnVsZXIgZm9yIEFsbCBDYXRzMS0wKwYDVQQDEyRDb21tb24gTmFtZSBmb3IgQWxs" +
		"IENhdHMgRW5kIFVzZXIgQ0EwHhcNMTUxMjIxMTY1NDQ0WhcNMTYxMjIwMTY1NDQ0WjBbMQsw" +
		"CQYDVQQGEwJCUjETMBEGA1UEChMKUEtJIEJyYXppbDEfMB0GA1UECxMWUEtJIFJ1bGVyIGZv" +
		"ciBBbGwgQ2F0czEWMBQGA1UEAxMNRnVsYW5vIGRlIFRhbDCCASIwDQYJKoZIhvcNAQEBBQAD" +
		"ggEPADCCAQoCggEBAM4+VhhhN2AXB1hN7IiuRsg75wdApkJQDNhIc0zACfjYKrwu1TN0sqFl" +
		"wgRhCv981ZexiQk2zYh9qBoyyozJ+4GyB87dHSAkC9/+qTGibG5dLx21Lf4vvolsvHrKG5MV" +
		"tZiInIVhl/ydoUc4QMqkK7fvNyTkYli8OU1UqOTjN9q7JFc6R+xAQMsfgXGnGTq2X3g6xMj6" +
		"kUcbptEZ4LQK/hNQcDehXj4zXXKc/bKuBa0WWekCff3dGlnuAld5xOCwXqDxCaQS690LOZPx" +
		"P8jLF7BQMbNYQH5b8mmEFVWXOAkiF1lOgMlNAzRXVx9XyQzfh52Bspjg1GPDYFZUlz9Q3pcC" +
		"AwEAAaOCAZwwggGYMAkGA1UdEwQCMAAwHQYDVR0OBBYEFIe6faHF3FpDvQOS1NLLpN7ouZFA" +
		"MB8GA1UdIwQYMBaAFFwm57wjPLUyv4fEw0WhrmwRKlAIMAsGA1UdDwQEAwIF4DApBgNVHSUE" +
		"IjAgBggrBgEFBQcDAgYIKwYBBQUHAwQGCisGAQQBgjcUAgIwLAYDVR0fBCUwIzAhoB+gHYYb" +
		"aHR0cDovL2xvY2FsaG9zdC9hYy9lbmQuY3JsMDgGCCsGAQUFBwEBBCwwKjAoBggrBgEFBQcw" +
		"AoYcaHR0cDovL2xvY2FsaG9zdC9hYy9lbmQuaHRtbDB1BgNVHREEbjBsoDgGBWBMAQMBoC8E" +
		"LTExMTExOTExMTExMTExMTExMTEwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMKAXBgVgTAED" +
		"BaAOBAwwMDAwMDAwMDAwMDCgFwYFYEwBAwagDgQMMDAwMDAwMDAwMDAwMDQGA1UdIAQtMCsw" +
		"KQYDKwUIMCIwIAYIKwYBBQUHAgEWFGh0dHA6Ly9teS5ob3N0Lm5hbWUvMA0GCSqGSIb3DQEB" +
		"CwUAA4IBAQBetEZyfrbjbA7XeC7LeSCfFKRzWWxblxzDfzFuSzXXkdt/bmfUE9dbfl0/Tx68" +
		"CbaWoGMZ/uOSEpLATizEvlEorrL/Lz8PdjOvVHN0Oopgtz0+U52iYhK+GwLp5RnaHcsKOxww" +
		"Kxc4Kzeo9VhyOatqfvotjnDKBmZGZOiOFzNM+UcSuOcr1cx/ST8kz3ITzWqWl42Jmn+K4iZR" +
		"8aXAxKWtzq4w5BFw16mSxYtNZrP1JZ0IS5ASg6mflXRt4oLhJa18VNXkNMaM/ztH6bg+3bfL" +
		"80NUDdj+rXqHzszfNiUt6sdSP3ph1n7sUNzZapMKCB24NVoaSjkPcc8irOtSwhP7MYIB+zCC" +
		"AfcCAQEwdzByMQswCQYDVQQGEwJCUjETMBEGA1UEChMKUEtJIEJyYXppbDEfMB0GA1UECxMW" +
		"UEtJIFJ1bGVyIGZvciBBbGwgQ2F0czEtMCsGA1UEAxMkQ29tbW9uIE5hbWUgZm9yIEFsbCBD" +
		"YXRzIEVuZCBVc2VyIENBAgEAMAcGBSsOAwIaoF0wGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEH" +
		"ATAcBgkqhkiG9w0BCQUxDxcNMTYwMjI2MTkxNDU1WjAjBgkqhkiG9w0BCQQxFgQUiuWz9wpH" +
		"bBf2Xfj3HzdWgEei1AIwDQYJKoZIhvcNAQEBBQAEggEALZg8aquKtEXb1vQZ3n7VQuCH4z4Y" +
		"cx7SOgMcA9fTNae8vGUZbXagL94UfJ/wXadUwM+zh6hx4fqN3+kjT0MKdKnsybFGI1Jv9OFg" +
		"mrM8mDr7i1WgvhJ6YilC2vjvAUpOYu0T6QUUeM/+XGY44yBpusBYkEWGRxvpF5fbuXq9mwsQ" +
		"icfYep0IHyctvBTwWHfy27eTxjK/8m7N9l7McI3gdIsALcYKEn43YVxxxb9eUbUy4+/vQPBp" +
		"vwtp7fQTw6GOR+uYn7emBpmdEsaOc9We9F6epa2JLcWwfZRF9Uk+8FQEtvwQZksJm86RBM7W" +
		"v2eoidOoX6nXoj/I6cJ4CHTZEQ==";
	private static final String CHAIN_DER =
		"MIJRIwYJKoZIhvcNAQcCoIJRFDCCURACAQExADALBgkqhkiG9w0BBwGgglD4MIIGoTCCBImg" +
		"AwIBAgIBATANBgkqhkiG9w0BAQ0FADCBlzELMAkGA1UEBhMCQlIxEzARBgNVBAoTCklDUC1C" +
		"cmFzaWwxPTA7BgNVBAsTNEluc3RpdHV0byBOYWNpb25hbCBkZSBUZWNub2xvZ2lhIGRhIElu" +
		"Zm9ybWFjYW8gLSBJVEkxNDAyBgNVBAMTK0F1dG9yaWRhZGUgQ2VydGlmaWNhZG9yYSBSYWl6" +
		"IEJyYXNpbGVpcmEgdjIwHhcNMTAwNjIxMTkwNDU3WhcNMjMwNjIxMTkwNDU3WjCBlzELMAkG" +
		"A1UEBhMCQlIxEzARBgNVBAoTCklDUC1CcmFzaWwxPTA7BgNVBAsTNEluc3RpdHV0byBOYWNp" +
		"b25hbCBkZSBUZWNub2xvZ2lhIGRhIEluZm9ybWFjYW8gLSBJVEkxNDAyBgNVBAMTK0F1dG9y" +
		"aWRhZGUgQ2VydGlmaWNhZG9yYSBSYWl6IEJyYXNpbGVpcmEgdjIwggIiMA0GCSqGSIb3DQEB" +
		"AQUAA4ICDwAwggIKAoICAQC6RqQO3edA8rWgfFKVV0X8bYTzhgHJhQOtmKvS8l4Fmcm7b2Jn" +
		"/XdEuQMHPNIbAGLUcCxCg3lmq5lWroG8akm983QPYrfrWwdmlEIknUasmkIYMPAkqFFB6quV" +
		"8agrAnhptSknXpwuc8b+I6Xjps79bBtrAFTrAK1POkw85wqIW9pemgtW5LVUOB3yCpNkTsNB" +
		"klMgKs/8dG7U2zM4YuT+jkxYHPePKk3/xZLZCVK9z3AAnWmaM2qIh0UhmRZRDTTfgr20aah8" +
		"fNTd0/IVXEvFWBDqhRnLNiJYKnIMmpbeys8IUWG/tAUpBiuGkP7pTcMEBUfLz3bZf3Gmh3sV" +
		"QOQzgHgHHaTyjptAO8lyUN9pvvAslh+QtdWudONltIwa6Wob+3JcxYJU6uBTB8TMEun33tcv" +
		"1EgvRz8mYQSxEpoza7WGSxMr0IadR+1p+/yEEmb4VuUOimx2xGsaesKgWhLRI4lYAXwIWNoV" +
		"jhXZfn03tqRF9QOFzEf6i3lFuGZiM9MmSt4c6dR/5m0muTx9zQ8oCikPm91jq7mmRxqE14Wk" +
		"A2UGBEtSjYM0Qn8xjhEu5rNnlUB+l3pAAPkRbIM4WK0DM1umxMHFsKwNqQbwpmkBNLbp+JRI" +
		"Tz6mdQnsSsU74MlesDL/n2lZzzwwbw3OJ1fsWhto/+xPb3gyPnnFtF2VfwIDAQABo4H1MIHy" +
		"ME4GA1UdIARHMEUwQwYFYEwBAQAwOjA4BggrBgEFBQcCARYsaHR0cDovL2FjcmFpei5pY3Bi" +
		"cmFzaWwuZ292LmJyL0RQQ2FjcmFpei5wZGYwPwYDVR0fBDgwNjA0oDKgMIYuaHR0cDovL2Fj" +
		"cmFpei5pY3BicmFzaWwuZ292LmJyL0xDUmFjcmFpenYyLmNybDAfBgNVHSMEGDAWgBQMOSA6" +
		"twEfy9cofUGgx/pKrTIkvjAdBgNVHQ4EFgQUDDkgOrcBH8vXKH1BoMf6Sq0yJL4wDwYDVR0T" +
		"AQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwDQYJKoZIhvcNAQENBQADggIBAFmaFGkYbX0p" +
		"Q3B9dpth33eOGnbkqdbLdqQWDEyUEsaQ0YEDxa0G2S1EvLIJdgmAOWcAGDRtBgrmtRBZSLp1" +
		"YPw/jh0YVXArnkuVrImrCncke2HEx5EmjkYTUTe2jCcK0w3wmisig4OzvYM1rZs8vHiDKTVh" +
		"NvgRcTMgVGNTRQHYE1qEO9dmEyS3xEbFIthzJO4cExeWyCXoGx7P34VQbTzq91CeG5fep2vb" +
		"1nPSz3xQwLCM5VMSeoY5rDVbZ8fq1PvRwl3qDpdzmK4pv+Q68wQ2UCzt3h7bhegdhAnu86aD" +
		"M1tvR3lPSLX8uCYTq6qz9GER+0Vn8x0+bv4qSyZEGp+xouA82uDkBTp4rPuooU2/XSx3KZDN" +
		"Ex3vBijYtxTzW8jJnqd+MRKKeGLE0QW8BgJjBCsNid3kXFsygETUQuwq8/JAhzHVPuIKMgwU" +
		"jdVybQvm/Y3kqPMFjXUXd5sKufqQkplliDJnQwWOLQsVuzXxYejZZ3ftFuXoAS1rND+Og7P3" +
		"6g9KHj41hJ2MgDQ/qZXow63EzZ7KFBYsGZ7kNou5uaNCJQc+w+XVaE+gZhyms7ZzHJAaP0C5" +
		"GlZCcIf/by0PEf0e//eFMBUO4xcx7ieVzMnpmR6Xx21bB7UFaj3yRd+6gnkkcC6bgh9mqaVt" +
		"J8z2KqLRX4Vv4EadqtKlTlUOMIIEgDCCA2igAwIBAgIBATANBgkqhkiG9w0BAQUFADCBlzEL" +
		"MAkGA1UEBhMCQlIxEzARBgNVBAoTCklDUC1CcmFzaWwxPTA7BgNVBAsTNEluc3RpdHV0byBO" +
		"YWNpb25hbCBkZSBUZWNub2xvZ2lhIGRhIEluZm9ybWFjYW8gLSBJVEkxNDAyBgNVBAMTK0F1" +
		"dG9yaWRhZGUgQ2VydGlmaWNhZG9yYSBSYWl6IEJyYXNpbGVpcmEgdjEwHhcNMDgwNzI5MTkx" +
		"NzEwWhcNMjEwNzI5MTkxNzEwWjCBlzELMAkGA1UEBhMCQlIxEzARBgNVBAoTCklDUC1CcmFz" +
		"aWwxPTA7BgNVBAsTNEluc3RpdHV0byBOYWNpb25hbCBkZSBUZWNub2xvZ2lhIGRhIEluZm9y" +
		"bWFjYW8gLSBJVEkxNDAyBgNVBAMTK0F1dG9yaWRhZGUgQ2VydGlmaWNhZG9yYSBSYWl6IEJy" +
		"YXNpbGVpcmEgdjEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDOHOi+kzTOybHk" +
		"VO4J9uykCIWgP8aKxnAwp4CM7T4BVAeMGSM7n7vHtIsgseL3QRYtXodmurAH3W/RPzzayFkz" +
		"nRWwn5LIVlRYijonojQem3i1t83lm+nALhKecHgH+o7yTMD45XJ8HqmpYANXJkfbg3bDzsgS" +
		"u9H/766zYn2aoOS8bn0BLjRg3IfgX38FcFwwFSzCdaM/UANmI2Ys53R3eNtmF9/5Hw2CaI91" +
		"h/fpMXpTT89YYrtAojTPwHCEUJcV2iBL6ftMQq0raI6j2a0FYv4IdMTowcyFE86tKDBQ3d7A" +
		"gcFJsF4uJjjpYwQzd7WAds0qf/I8rF2TQjn0onNFAgMBAAGjgdQwgdEwTgYDVR0gBEcwRTBD" +
		"BgVgTAEBADA6MDgGCCsGAQUFBwIBFixodHRwOi8vYWNyYWl6LmljcGJyYXNpbC5nb3YuYnIv" +
		"RFBDYWNyYWl6LnBkZjA/BgNVHR8EODA2MDSgMqAwhi5odHRwOi8vYWNyYWl6LmljcGJyYXNp" +
		"bC5nb3YuYnIvTENSYWNyYWl6djEuY3JsMB0GA1UdDgQWBBRCsixcdAEHvpv/VTM77im7XZG/" +
		"BjAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjANBgkqhkiG9w0BAQUFAAOCAQEA" +
		"WWyKdukZcVeD/qf0eg+egdDPBxwMI+kkDVHLM+gqCcN6/w6jgIZgwXCX4MAKVd2kZUyPp0ew" +
		"V7fzq8TDGeOY7A2wG1GRydkJ1ulqs+cMsLKSh/uOTRXsEhQZeAxi6hQ5GArFVdtThdx7KPoV" +
		"caPKdCWCD2cnNNeuUhMC+8XvmoAlpVKeOQ7tOvR4B1/VKHoKSvXQw2f3jFgXbwoAoyYQtGAi" +
		"OkpIpdrgqYTeQ9ufQ6c/KARHki/352R1IdJPgc6qPmQO4w6tVZp+lJs0wdCuaU4eo9mzh1fa" +
		"cMJafYfN+b833u1WNfe3Ig5Pkrg/CN+cnphe8m+5+pss+M1F2HKyIDCCBlkwggRBoAMCAQIC" +
		"AQkwDQYJKoZIhvcNAQENBQAwgZcxCzAJBgNVBAYTAkJSMRMwEQYDVQQKEwpJQ1AtQnJhc2ls" +
		"MT0wOwYDVQQLEzRJbnN0aXR1dG8gTmFjaW9uYWwgZGUgVGVjbm9sb2dpYSBkYSBJbmZvcm1h" +
		"Y2FvIC0gSVRJMTQwMgYDVQQDEytBdXRvcmlkYWRlIENlcnRpZmljYWRvcmEgUmFpeiBCcmFz" +
		"aWxlaXJhIHYyMB4XDTExMTEyMjE3MTUwMVoXDTIxMTEyMjE3MTUwMVowgYkxCzAJBgNVBAYT" +
		"AkJSMRMwEQYDVQQKEwpJQ1AtQnJhc2lsMTQwMgYDVQQLEytBdXRvcmlkYWRlIENlcnRpZmlj" +
		"YWRvcmEgUmFpeiBCcmFzaWxlaXJhIHYyMS8wLQYDVQQDEyZBdXRvcmlkYWRlIENlcnRpZmlj" +
		"YWRvcmEgZGEgSnVzdGljYSB2NDCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAO+p" +
		"DS1Hyez0jj4i5CZLRfgDawp588MlIBPjV4ddFmhSwQismEAxqvcpN45bJiez/WuHUWIwzhlz" +
		"BJsOVz7vlgp+MAH52gRTrVFEgHia8K2plcQYb8dItefA6/SDvJHsOlGga+XlWsRH10yDcabl" +
		"VNk10Y9+oPk4zqUsBGX5L3b59aigwJ21GvACNplrdf/IKfrGk2Y4veVTUdDJyJ0MkY5eFF5V" +
		"iVPoWTsGEoN0bR0cPYXWMEfOAiotF86eg/zdE3BWIuoUkFui51r2DomkUikdAvvomX0cLHCn" +
		"qk/Ph6NLKSvo+sMRbZxGzlagKZSvDtAHdlGT9CfT1+PX47GGEN8Kl6y0ciPR2qfWtqREDL2r" +
		"Nq9PLqeAI3oPtGagTwmjsLlcymG4iaxgfHKtWBMAHBv+pT3xAJ6QYCLoHhAhCjSBwCsHXS0d" +
		"QBd5Q0XvWwzRkcZohqnYbUd+LaPmOvjaBJSNz7scd6mu4XwojGpayBbxmh30KxEkTqOdncvH" +
		"hWuhUd1EBJ7UnAFi/Cn8JiNVpd1FbTpjJpbkkUIW62A5jqDbgMQ4dPLWMPG2OaCOdO+/t5bJ" +
		"vvT/d9ilvG1ELzOwK6PGi3AinZXB7yU8C4FBJDtUoPEETxaMs49Z45Edwg4pRFJpQlv1+X9b" +
		"vlqzz3nOR/Gll9oC1gDW8Bx3/58z4Yi/AgMBAAGjgbswgbgwHQYDVR0OBBYEFPg5AKX+67In" +
		"mgaLYZYC+tKQkO2+MA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMBQGA1UdIAQN" +
		"MAswCQYFYEwBARMwADA/BgNVHR8EODA2MDSgMqAwhi5odHRwOi8vYWNyYWl6LmljcGJyYXNp" +
		"bC5nb3YuYnIvTENSYWNyYWl6djIuY3JsMB8GA1UdIwQYMBaAFAw5IDq3AR/L1yh9QaDH+kqt" +
		"MiS+MA0GCSqGSIb3DQEBDQUAA4ICAQAYm2yNbG33QKIPu0w6jEDN0EAN3R2B54g6bRGyg5LJ" +
		"nnz8pG+7s6pQRbkT5LTCQExIx9ywxBEvIozDClvCjl5S4EQAhDoAqBC/wD1KdCzL6BxTCkKv" +
		"c6U3wmCORCADzE3g5qIH3DCFdYSRF/uaFekFEa0Mi1S3pywypeBvNINARIefzm8Przh17Zf/" +
		"yjlmxs+lWfr3rWSSDfVstGSVkKtZ9030UVaa2LKD8yyrHvg9cszI0A8nYFWX0uo7VNgyDvxZ" +
		"9HjycPuKYBx7g8ltitTwYE1A84vOlPWkyCkSM/CcLplhmdGJ0fxiB0DchVR+m0W8UgJDw6CS" +
		"+UieW4aSOqkhq0kCqTHrJgsZYVew5xTNHW5oqe+d2FwSCivbwNvhkxzXYVoeZwgkKfV32dNx" +
		"EQNBd64K/0Msfiy1cT7PNkjxVdgvTMRVO+PET5YknGUKBXzetviEMfDRwNb2/7UJHuN6Fenc" +
		"OQ4RL7FFebMpahLM01ue1ANDCHB1uFlSNVmctMurrWwcUNNL34zMEe7qxMJOFjGV0+mt+yPL" +
		"uJppfOLZOUH0gy3h3f4Ua5NnIFYE+W83EysVyxqwDbKWLtnvsOSyMqLYl++1VOmtHLRKyMGW" +
		"CHR0iwG1rxgJIsoRaXnCacysnCDgFae66dLKhhgABQLMCSDZcAtlUR4N9MAwWy25VTCCBGIw" +
		"ggNKoAMCAQICAQgwDQYJKoZIhvcNAQEFBQAwgZcxCzAJBgNVBAYTAkJSMRMwEQYDVQQKEwpJ" +
		"Q1AtQnJhc2lsMT0wOwYDVQQLEzRJbnN0aXR1dG8gTmFjaW9uYWwgZGUgVGVjbm9sb2dpYSBk" +
		"YSBJbmZvcm1hY2FvIC0gSVRJMTQwMgYDVQQDEytBdXRvcmlkYWRlIENlcnRpZmljYWRvcmEg" +
		"UmFpeiBCcmFzaWxlaXJhIHYxMB4XDTA5MDYxMjE5MjAzM1oXDTE5MDYxMjE5MjAzM1owgZIx" +
		"CzAJBgNVBAYTAkJSMRMwEQYDVQQKEwpJQ1AtQnJhc2lsMT0wOwYDVQQLEzRJbnN0aXR1dG8g" +
		"TmFjaW9uYWwgZGUgVGVjbm9sb2dpYSBkYSBJbmZvcm1hY2FvIC0gSVRJMS8wLQYDVQQDEyZB" +
		"dXRvcmlkYWRlIENlcnRpZmljYWRvcmEgZGEgSnVzdGljYSB2MzCCASIwDQYJKoZIhvcNAQEB" +
		"BQADggEPADCCAQoCggEBAMH5yrtQJQ9WOemny8Tw87+TY7rPYWIW/O5/1Mo4JodeDbboZsOx" +
		"KJZRA5c3Hljh6u/mHcUaATmXWdtbhSGj8S23bMzhrlphRuXY1CxaiwWqb+6BrOIM4cxcs73c" +
		"Qcvt7Wit7DrlCcS9wNiIN+6xxe+Z9WEHkt6V+jNL/RVX7rogku68Ctacd3tIPkRqhnh914nb" +
		"UHpuMrDRBJz4ld2+nAT1gN1yLzrrx2mKiE/4OE+A8LrfH7YHwfEFWvSRLGsTAyy2d1n8oBqP" +
		"J71yoGD/+aVZLEpdGEJZzh/5sdUyuAAzEkFfGVhKkGegGOQ6IqLgXZi43v6Uyoc3xgXUDh2m" +
		"b48CAwEAAaOBuzCBuDAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjAUBgNVHSAE" +
		"DTALMAkGBWBMAQETMAAwPwYDVR0fBDgwNjA0oDKgMIYuaHR0cDovL2FjcmFpei5pY3BicmFz" +
		"aWwuZ292LmJyL0xDUmFjcmFpenYxLmNybDAfBgNVHSMEGDAWgBRCsixcdAEHvpv/VTM77im7" +
		"XZG/BjAdBgNVHQ4EFgQUP02gr3F4RFoevgZsmus1wxley+MwDQYJKoZIhvcNAQEFBQADggEB" +
		"AFnqSxsooBwc3xzY+YNzd+2nPsCxReIQAuhtVI4u2E8L2RJJ53PzZ9gslsPS4AZxQkkXac7b" +
		"Lj2qjBSozY1MfNAbBRp9/A1Iag90+rdJr/t1wpxc8sZxo/01xtfDMDIYu8/8OBToha4dp9qo" +
		"JqJpC9Ya83WJ+V/wZlZLUp6nEjgP3majyaZAErTIG/kkebjq6EgthaOyvlKU7CWGxMEQEAHF" +
		"Nx4A5b3fsNtDTyOwHg+ui4AyFHbhiU8ViKgvuCdsDNwdARVRiIxh0eiKnx0kvjVSS4X+RRB0" +
		"B/8dDq3TpBHDYxxj13okSJ/n94bp0rv5z9IKd1iMW04Wxng1uEoK7icwggblMIIEzaADAgEC" +
		"AgEDMA0GCSqGSIb3DQEBDQUAMIGJMQswCQYDVQQGEwJCUjETMBEGA1UEChMKSUNQLUJyYXNp" +
		"bDE0MDIGA1UECxMrQXV0b3JpZGFkZSBDZXJ0aWZpY2Fkb3JhIFJhaXogQnJhc2lsZWlyYSB2" +
		"MjEvMC0GA1UEAxMmQXV0b3JpZGFkZSBDZXJ0aWZpY2Fkb3JhIGRhIEp1c3RpY2EgdjQwHhcN" +
		"MTExMjI4MTMwMzIxWhcNMTkxMjI4MTMwMzIxWjBzMQswCQYDVQQGEwJCUjETMBEGA1UEChMK" +
		"SUNQLUJyYXNpbDE1MDMGA1UECxMsQXV0b3JpZGFkZSBDZXJ0aWZpY2Fkb3JhIGRhIEp1c3Rp" +
		"Y2EgLSBBQy1KVVMxGDAWBgNVBAMTD0FDIENBSVhBLUpVUyB2MjCCAiIwDQYJKoZIhvcNAQEB" +
		"BQADggIPADCCAgoCggIBAJrd6JBC8kqnR2fI2z1mjg5RpCVQp/ZFH+XX1frUj60u/tDVflCb" +
		"2A5O1sbV7mRjZSM9S9mGryn9sUOwDwQIgQYXAN5oiBV2KCctjCu7Egzjvr0TuaGLaTrvYKSL" +
		"BWi3g7i8Zvy9Lm9Rd5gr2D2zDSZyZ8TkCqI89A8jEV+dXTrw6cTTq7sc6Shwv6+jO3pAJhrO" +
		"bO3v4UkFy28Gmi7P1DN4blLS3SmKm9Zh1ZxWSks7BhH1nbMebaOBaAfctT4yT+b3F0zcOWZ3" +
		"Of+WifEXkkJ6haVazKkeYVpIuNNvrcuKs53vrNW8WJmlmQvyytbuOn7a1kh8jt9n/XfeGgo8" +
		"/QwvF/4Qef4kwFSXSadZutDWousXxLf5oUAVL/fAF2npk5RTLKyiNM9MlNQTP41ZJpJz4UU6" +
		"5YMWqgv0AjOsnt8iiClXv6X8QeW6U5bW42bExbGl6iZ1JZkK/cHs9FLE+WXdo7By/PhjwLjJ" +
		"4BIKFrlbECkrymZKUJYvA1BXca6Lr6FwAPtZhesLpeJLzsMzLOTQpL0yEHZxPMn4rV29OYP5" +
		"5ygpmkSYkPg6QEZYNdAKM/kVO9vJjAQO+R44TrsJAYAqy+/BZoXUOZw02WMdpHBnegbVRSkS" +
		"JmlWB7PMV4YjNJE5+dTnDZw0wEstVhwpQXJ83qtELq2WhKOqEIVSiG7lAgMBAAGjggFrMIIB" +
		"ZzCBkwYDVR0gBIGLMIGIMEIGBmBMAQIBFjA4MDYGCCsGAQUFBwIBFipodHRwOi8vd3d3LmFj" +
		"anVzLmp1cy5ici9hY2p1cy9kcGNhY2p1cy5wZGYwQgYGYEwBAgMTMDgwNgYIKwYBBQUHAgEW" +
		"Kmh0dHA6Ly93d3cuYWNqdXMuanVzLmJyL2FjanVzL2RwY2FjanVzLnBkZjBrBgNVHR8EZDBi" +
		"MC+gLaArhilodHRwOi8vd3d3LmFjanVzLmp1cy5ici9hY2p1cy9hY2p1c3Y0LmNybDAvoC2g" +
		"K4YpaHR0cDovL2xjci5hY2p1cy5qdXMuYnIvYWNqdXMvYWNqdXN2NC5jcmwwHwYDVR0jBBgw" +
		"FoAU+DkApf7rsieaBothlgL60pCQ7b4wHQYDVR0OBBYEFNSxwylJl61OZjbb6U4ASmrYw9rE" +
		"MBIGA1UdEwEB/wQIMAYBAf8CAQAwDgYDVR0PAQH/BAQDAgEGMA0GCSqGSIb3DQEBDQUAA4IC" +
		"AQCsTBxNOtr21+dSrlhjwXir7vPlAPecu+XjaxG2ph6n16TaN9T30pOHfygbqCsu4agCdEas" +
		"Q8uh3p9nixbpSaZ6NpzhIrT5DfCfNl8hZCojK3UKLbyOIuUrh9k17asnndbGn1qJ2i3fX761" +
		"ufchPJuB9G+Bn2Y8IV/66dv9VW9psNIRT1c68R/n6jP28iY+E+cNCcR8SfdSSJYtyFFxDlTN" +
		"hpiM2VrJgiygEhmWO+a/oD5FNz8tg40nw99VWtwpiH+4DjqqiMWf6ioslstZN/8FP7ySNXQU" +
		"YvLEjElhBPg8Jcwv4ZDRmQcVVv99S00Zo9iCpYF3CKuMAh8QTcWyVeN+dWXnpj9Txm1zmDJS" +
		"thcHQTSilNNBr5GCCfoKmSugeg69zNW5D86itYiGa4O70xWHaeNDpeTvUnA8XRtSgiMtWCqJ" +
		"7CkXE8wArQ5NWrP/dSRhSPugDgfIy9Wpye8Kg4SZzy85rDErIgEA+1QibNWO8CgGOSSdvXgo" +
		"/YLH7vufsGE8F+BGAae48+TT652ZoweTLd9NQdRxcVbWMp6H1MhvcSbRrTq2tgwohm1qzCXq" +
		"SKd/BrW+2ks0Vt6J0OMa5bP8+7LsfZgHOVHmEsChv/SWIfIP4myO6bEtt945tSiOz2YlSkY1" +
		"ENT/S9LMygzpeBMci5jZQ5OfpvHPJigKZfhnQzCCBO4wggPWoAMCAQICAQUwDQYJKoZIhvcN" +
		"AQEFBQAwgZIxCzAJBgNVBAYTAkJSMRMwEQYDVQQKEwpJQ1AtQnJhc2lsMT0wOwYDVQQLEzRJ" +
		"bnN0aXR1dG8gTmFjaW9uYWwgZGUgVGVjbm9sb2dpYSBkYSBJbmZvcm1hY2FvIC0gSVRJMS8w" +
		"LQYDVQQDEyZBdXRvcmlkYWRlIENlcnRpZmljYWRvcmEgZGEgSnVzdGljYSB2MzAeFw0xMTAx" +
		"MTQxMjU5MzRaFw0xOTAxMTQxMjU5MzRaMHMxCzAJBgNVBAYTAkJSMRMwEQYDVQQKEwpJQ1At" +
		"QnJhc2lsMTUwMwYDVQQLEyxBdXRvcmlkYWRlIENlcnRpZmljYWRvcmEgZGEgSnVzdGljYSAt" +
		"IEFDLUpVUzEYMBYGA1UEAxMPQUMgQ0FJWEEtSlVTIHYxMIIBIjANBgkqhkiG9w0BAQEFAAOC" +
		"AQ8AMIIBCgKCAQEAxGDQHHbtRzzu6TG/kRR8Xa6Vxb2izqfXMGpNzXvIKRudIHO9dSbiy+ES" +
		"J095ae02W7WcFjNZ9YPWmocZBnjsS5QyEGk03YExT/kmJY1VNMPS0d+xgye08zZVRxseabJD" +
		"clWFOBDcF/JyR0zf3fVzmyclaI1A3a6o2C0YrJl5AO1JSd+R5Vskk0c7+mggrtzgE5WrA9n2" +
		"ymwaWHjTyV62qI/5jK7C0CedUMkeM+H6rK+SuezLgcS0xNR3QEMz34sONxRSazC6ICt/e75U" +
		"qRwgyw6QTlnwVNRLDr2cHbKPk931xteVytm9SojB9w7b18uU7ZFCf9VO7baRQN/tq27sTwID" +
		"AQABo4IBazCCAWcwgZMGA1UdIASBizCBiDBCBgZgTAECARYwODA2BggrBgEFBQcCARYqaHR0" +
		"cDovL3d3dy5hY2p1cy5qdXMuYnIvYWNqdXMvZHBjYWNqdXMucGRmMEIGBmBMAQIDEzA4MDYG" +
		"CCsGAQUFBwIBFipodHRwOi8vd3d3LmFjanVzLmp1cy5ici9hY2p1cy9kcGNhY2p1cy5wZGYw" +
		"awYDVR0fBGQwYjAvoC2gK4YpaHR0cDovL3d3dy5hY2p1cy5qdXMuYnIvYWNqdXMvYWNqdXN2" +
		"My5jcmwwL6AtoCuGKWh0dHA6Ly9sY3IuYWNqdXMuanVzLmJyL2FjanVzL2FjanVzdjMuY3Js" +
		"MB8GA1UdIwQYMBaAFD9NoK9xeERaHr4GbJrrNcMZXsvjMB0GA1UdDgQWBBSp1+m1w8BEQ8Mj" +
		"b+2+6FjVkE7CtDASBgNVHRMBAf8ECDAGAQH/AgEAMA4GA1UdDwEB/wQEAwIBBjANBgkqhkiG" +
		"9w0BAQUFAAOCAQEAtlsdA9iNTBTEciBQHvOm2vt6abRYWPajprdCJXmHQ/PO/fI3FwDZIvpC" +
		"DZ6jG8XZG0Cb6hGnjt2Lza25FkNrYb9UYBz91pGxVvID0hpE6/w5HK1daq9qPyeTSVTvfTLe" +
		"6XnEIY2FA6NQVxj6bCp4TwWKEkXDba6zRYKSUMM34A/oaQToUqhzEYkAB0hYPJS+zggkiJR/" +
		"d4Kcsg20r5de+RTpu/eC1KP6C/UufK125ra77c1pawAYeUZV6Y8Rmk1R25oQ/AAV2ohwym1j" +
		"k2Luudqspml7Nfm5n7DJh3vsFAEjIT9fbSO8JmPDnTL29jggTyn+SLW5XR/0764GSLsb1zCC" +
		"Bj0wggQloAMCAQICAQswDQYJKoZIhvcNAQENBQAwgZcxCzAJBgNVBAYTAkJSMRMwEQYDVQQK" +
		"EwpJQ1AtQnJhc2lsMT0wOwYDVQQLEzRJbnN0aXR1dG8gTmFjaW9uYWwgZGUgVGVjbm9sb2dp" +
		"YSBkYSBJbmZvcm1hY2FvIC0gSVRJMTQwMgYDVQQDEytBdXRvcmlkYWRlIENlcnRpZmljYWRv" +
		"cmEgUmFpeiBCcmFzaWxlaXJhIHYyMB4XDTExMTIwMjEyMTY1M1oXDTIxMTIwMjEyMTY1M1ow" +
		"bjELMAkGA1UEBhMCQlIxEzARBgNVBAoTCklDUC1CcmFzaWwxNDAyBgNVBAsTK0F1dG9yaWRh" +
		"ZGUgQ2VydGlmaWNhZG9yYSBSYWl6IEJyYXNpbGVpcmEgdjIxFDASBgNVBAMTC0FDIENBSVhB" +
		"IHYyMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEArP9r7AvcBjw8gjcK2WDBeN0p" +
		"BoAdCKNz3o7PDemMT0fDg9gl0LOFK7Lo2bziPhDtz/LUoLqS043El+a+KwSfV8jb02ZLy1J7" +
		"g7KbSizbEwib9gGMDdZPjqAdKb9aaj1e+QJomLIogu7Nr/oYliOMhOXbemc2a/v69JyGMnbE" +
		"vs7Xxy0CVtCo45e98X48oXhaFlsfct2kgT77XuknI9ePqIMyml+IiTHLj5Cbz7iZPyLwZgN8" +
		"l3QSyY3rXSKS0C2gedobccJi6H/rhgmXzqeAbsXjhfvM/g420sgVcNABGTp83OJu0lAPHdz5" +
		"fH75DruMgbE21dFEG5TN1iSTlwy1x+WdaL9QmmCfKGtXG1sAToM7Z0b1x18LykKubXISJQLv" +
		"7NMwdOfdLBIrSQxtCqJzthT8NUJLVvUmHcsLS2HuEik+R288qQv+jYJ7bC7DxSEgr4F5GIGc" +
		"ks2m8xEYoXg09MFHfmAm3Xad9S3bBrEHWelO8qq4LtwInjZbrXiwJd+NQMYwLZxTiFMVi7jI" +
		"j8y9EXy9yjFL7a6R+lnyOG5R2aoTQTLfaWJs0CqMqwFpt62JWf/f/SGjOJP8Dmr9Fln6vw/P" +
		"a/U36vWU2L+y/KMAAvPCALI5WyUeU2lZPa8GyJerAC13cU0YfOKgEmEJUfs6kiQmgOfrHh8w" +
		"TKM28bvSgikCAwEAAaOBuzCBuDAUBgNVHSAEDTALMAkGBWBMAQEJMAAwPwYDVR0fBDgwNjA0" +
		"oDKgMIYuaHR0cDovL2FjcmFpei5pY3BicmFzaWwuZ292LmJyL0xDUmFjcmFpenYyLmNybDAf" +
		"BgNVHSMEGDAWgBQMOSA6twEfy9cofUGgx/pKrTIkvjAdBgNVHQ4EFgQUD1AkMeS6vLGZSSY1" +
		"7Q7Qdf6cn1UwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwDQYJKoZIhvcNAQEN" +
		"BQADggIBADs7/JcNpQ6dF90q3Sdz+zEZrgOTor73N9gxl491nLghuNukRs4BJMJb9NmdDI3f" +
		"7PznrOdD2xXEiIjDKnMkn6VztB/Zk9vswvYs1iAFGOMlIPIR48kIXt2oHf9BCr2cn+rxExMP" +
		"8mpDQiSXWE8IY65WH5YwKRJo1hrsmjB6UF6PDwLEn+oHpqDBVkyaLpLZB+EMtrVtZYJ3jwtu" +
		"mxsOD07Bg4ntOFgUnfVK6LTY27KOIfV4cXJ6P+MXuxI+gsIVURg0QlTjtVuiEdTWuTUy47CS" +
		"KJMpC7KRCV1FXxkM4Z2oZYqk9Sv4nrIOWvP1XB3XJ5Qh5ls351tNhMaE34lP1vgmpkxXhpBP" +
		"4/Af2XmJnDsWTbKDedBF4zmEvWMbByb9vpEeuuVd68amI4W7RwIURA7pU41n98SbfIGANRI2" +
		"L/0oZUIoigWekp6RzurhA0/gOBJ8RNQ7XPlj8uqLAUaPPRB31vv8YbzPR+YqXU/Zyn5j9y+H" +
		"5JO7ccmPkbeUTB3MuKLDHWFOqF/Hg0ThgAvRsY0NOTXP7526W9Kne77z4BIImK6xf7Ym16gh" +
		"gQZbMsftYEC3bPwxb37JJ8j0rAIWKewtPoGOUEu8PWLNfTc1ze/TLN9XO5vn6DPfzzagvcJm" +
		"XIXwPN3HaFnKnigf5XOv6tDXOD0dAgbleyJeZuJOF6jeMIIEPTCCAyWgAwIBAgIBDDANBgkq" +
		"hkiG9w0BAQUFADCBlzELMAkGA1UEBhMCQlIxEzARBgNVBAoTCklDUC1CcmFzaWwxPTA7BgNV" +
		"BAsTNEluc3RpdHV0byBOYWNpb25hbCBkZSBUZWNub2xvZ2lhIGRhIEluZm9ybWFjYW8gLSBJ" +
		"VEkxNDAyBgNVBAMTK0F1dG9yaWRhZGUgQ2VydGlmaWNhZG9yYSBSYWl6IEJyYXNpbGVpcmEg" +
		"djEwHhcNMTAxMjIzMTc1MzQ0WhcNMTQxMjMxMjM1OTU5WjBuMQswCQYDVQQGEwJCUjETMBEG" +
		"A1UEChMKSUNQLUJyYXNpbDE0MDIGA1UECxMrQXV0b3JpZGFkZSBDZXJ0aWZpY2Fkb3JhIFJh" +
		"aXogQnJhc2lsZWlyYSB2MTEUMBIGA1UEAxMLQUMgQ0FJWEEgdjEwggEiMA0GCSqGSIb3DQEB" +
		"AQUAA4IBDwAwggEKAoIBAQCfC04mZYAd7p+GwSdoTwZCiSiwL+SBo/ggh3YKOG1/u0RveBvQ" +
		"HMdBzZOCnaZ1IbqFvENunOPgZldmBghYHRB+mCNiGfu2FBFA87sRd69hsVSUKs5w2M+rpbOM" +
		"JFebY8Nxt/YXmeOCfLvi+u1pLg2cV6vHwhOni0ba/qmgeCr4udlieqeqrrGMcxzDsgGtoDyp" +
		"JC3BJaZhcGzCxmCzCkiUybEjYYEmmyTuFQJfygU49JlSp2Vo9yhLtIozCtn+ISh97+Q9YeeZ" +
		"HK4d2WLBohqGrrKhcF7V78M+84hNgmRqaV0hUwLpAFcqK8qD+QqWNo5i5SBZflzetXlLviAe" +
		"MDIRAgMBAAGjgbswgbgwFAYDVR0gBA0wCzAJBgVgTAEBCTAAMD8GA1UdHwQ4MDYwNKAyoDCG" +
		"Lmh0dHA6Ly9hY3JhaXouaWNwYnJhc2lsLmdvdi5ici9MQ1JhY3JhaXp2MS5jcmwwHwYDVR0j" +
		"BBgwFoAUQrIsXHQBB76b/1UzO+4pu12RvwYwHQYDVR0OBBYEFFpQUqU6ju8YfG9g8ZQ8kmdp" +
		"rbtMMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMA0GCSqGSIb3DQEBBQUAA4IB" +
		"AQBL3duClI+Gsx/G2UtsFRVd9wE+FBGjMyNzoc3JkXa62xTuZd190tHANt8cib81e5xtSscE" +
		"rHkldN637R8FRCpJIF0Xog/WyYcf88aWCa8fnEzKdZJINJcvtKbmlSR27lC36VTrRuc+KgdW" +
		"X086xrdx0y04nZKUzBOLhoxDpzVdVvPhI064bTodNVgNlojQXb9v+zcm1IeKg+6M6rxvlzUJ" +
		"rwP8gDrOV/uVdfBX785mhoOD2usRDvPqMd4ilz+uYmj1lPpyn2EpeFsn7O78iBGtBOsCexXg" +
		"bgnEg0aR0xbMgAasuVAH9yyzzBqZrXmqZhkxO5t7tmw3j2mIo3fo4YsEMIIFMjCCBBqgAwIB" +
		"AgIIIn3vAEfuITgwDQYJKoZIhvcNAQEFBQAwbjELMAkGA1UEBhMCQlIxEzARBgNVBAoTCklD" +
		"UC1CcmFzaWwxNDAyBgNVBAsTK0F1dG9yaWRhZGUgQ2VydGlmaWNhZG9yYSBSYWl6IEJyYXNp" +
		"bGVpcmEgdjExFDASBgNVBAMTC0FDIENBSVhBIHYxMB4XDTExMDYwODIwMDExMFoXDTE0MTIz" +
		"MTIwMDExMFowXzELMAkGA1UEBhMCQlIxEzARBgNVBAoMCklDUC1CcmFzaWwxIDAeBgNVBAsM" +
		"F0NhaXhhIEVjb25vbWljYSBGZWRlcmFsMRkwFwYDVQQDDBBBQyBDQUlYQSBQSi0xIHYxMIIB" +
		"IjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtmmGCD28RSg8yaDl8yOLA7o0g4SrV4HB" +
		"z66Muf1ZZGEWJbKLNJa4kqqsJnVBS4fRjeWmAvgqDuqGyf6xk5Xb6KbzS+zM2W2TaLxn8E8o" +
		"9Ufj+dq1nnQ5lkSA5gpeD7C/KpZCv0TmNQVaSor7LTIrTz+BtDddMLk9pvzkOv0rtYZ2XLva" +
		"BH6QKfo5X4Jxqzp7LVlcVCOxBr9Z3vvGInIAZjs8FhfkijqeBSrOMWQF/0w0ZuOoVBxSbJt7" +
		"IKG+SEMQcbOV52poXZOWW9oVMPhGaqR241dmFBsjy+hryezBJ9IJVFJ+e43NYzUgvAuf/2RQ" +
		"ciu8GgWAAJSewrcLjFZlvQIDAQABo4IB4TCCAd0wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8B" +
		"Af8EBAMCAQYwHQYDVR0OBBYEFBfEVYUPm4zHASOAnRGzR9yzk9arMB8GA1UdIwQYMBaAFFpQ" +
		"UqU6ju8YfG9g8ZQ8kmdprbtMMIHFBgNVHSAEgb0wgbowWwYGYEwBAgEJMFEwTwYIKwYBBQUH" +
		"AgEWQ2h0dHA6Ly9jZXJ0aWZpY2Fkb2RpZ2l0YWwuY2FpeGEuZ292LmJyL2RvY3VtZW50b3Mv" +
		"ZHBjYWMtY2FpeGFwai5wZGYwWwYGYEwBAgMJMFEwTwYIKwYBBQUHAgEWQ2h0dHA6Ly9jZXJ0" +
		"aWZpY2Fkb2RpZ2l0YWwuY2FpeGEuZ292LmJyL2RvY3VtZW50b3MvZHBjYWMtY2FpeGFwai5w" +
		"ZGYwgbEGA1UdHwSBqTCBpjAroCmgJ4YlaHR0cDovL2xjci5jYWl4YS5nb3YuYnIvYWNjYWl4" +
		"YXYxLmNybDAsoCqgKIYmaHR0cDovL2xjcjIuY2FpeGEuZ292LmJyL2FjY2FpeGF2MS5jcmww" +
		"SaBHoEWGQ2h0dHA6Ly9yZXBvc2l0b3Jpby5pY3BicmFzaWwuZ292LmJyL2xjci9DQUlYQS9B" +
		"Q0NBSVhBL2FjY2FpeGF2MS5jcmwwDQYJKoZIhvcNAQEFBQADggEBACp14XQ934E22hCxlYzY" +
		"qRuYIti2bnOy3ei8viDleoR1YD176c/xG8V2J5cU6LfXMGxO9+G1U/OG4xR5FsPJl54AZwGH" +
		"8RWV8z4+KPPQkCf17X3SVGdZ0uE5ONrQxhsXUmqyoFXuKrLJAsCtu6fqRCc11ByzuUa0kUla" +
		"RhcIQFCkbXQIyQ08fpkomJlom2jxEc7AWvULz+37yCMulsSpzmmBm1QBEtxA3WobgZiNpkG4" +
		"SNDk0DyS/o0UYTOEGPoaRZb8gmanRDFtVBhYNR1R/HUP3Hl87ySsnjO7qZaNrwtlyow/7OYo" +
		"ZZnaU3CYSbyxin3YHMl8kbvXocseEYUKVKwwggfvMIIF16ADAgECAggtth/O0YmpJTANBgkq" +
		"hkiG9w0BAQ0FADBuMQswCQYDVQQGEwJCUjETMBEGA1UEChMKSUNQLUJyYXNpbDE0MDIGA1UE" +
		"CxMrQXV0b3JpZGFkZSBDZXJ0aWZpY2Fkb3JhIFJhaXogQnJhc2lsZWlyYSB2MjEUMBIGA1UE" +
		"AxMLQUMgQ0FJWEEgdjIwHhcNMTExMjIzMTM1NTM2WhcNMTkxMjIxMTM1NTM2WjBdMQswCQYD" +
		"VQQGEwJCUjETMBEGA1UECgwKSUNQLUJyYXNpbDEgMB4GA1UECwwXQ2FpeGEgRWNvbm9taWNh" +
		"IEZlZGVyYWwxFzAVBgNVBAMMDkFDIENBSVhBIFBKIHYyMIICIjANBgkqhkiG9w0BAQEFAAOC" +
		"Ag8AMIICCgKCAgEAqwAznrfdbQ9CEHToKCe7k1srNVEtQRw10Qacud0VMI9r3DlbF/Fkf6ut" +
		"0Hiet236jK2s7OjRhz5jyAPQkRWoMp/hsfxLwJANse9yVt6ZyF4SSye2HYfTn5DMlbzqEcNs" +
		"k0Py9Rf+GNsrYNvdALeVcMDz9Ua/s3uKfIyr/khMhFqnw5LVMoHli2od8YoXc1xzqqXm1+BA" +
		"J/BpcyM8CknLAqAw1VJO/14cjbOgYs8rmywN8iAI5HyXjtez0/ClFh5CElbvalKLacU4CBEb" +
		"g55RfoYEMl2s2FDV1hz2XGlCWpQcyGJ6BEDESlgxr9WP049CGuteZGIigWEeXEI0r9720ToA" +
		"iJ+HurhN/X2Y4tfRql5LzVeWevzHEOIfNM8uEtbUSZWhHXQdCmtUNy0QIXEElgrH31DEjv/N" +
		"Cwe8TNKGdNJNraVMDwcNxaRNuXqou2X41EYk7zHHPZ3nfkHK84DWaVr5ufeqII1qp5p62n16" +
		"uJreYDL/3uhduoh3mLN1/7yX3iIF6C+3oOtSqzpBCNsTunY5LdLuM1hn/2n4R1YIHU6CAyWe" +
		"wuIP1mSaGkUkDYBaOQhukdoYMdYXYLvFkOijb3VXOEFTARW2QveNTHMO6lpVmulCSNhWOijG" +
		"YeoUnU0vmgFTC2PLkterHBcgSp4X1jOIxi+3EUfOXSHi8bSgPSkCAwEAAaOCAqAwggKcMA8G" +
		"A1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdDgQWBBRPTQ0BnGpp23AJpN4z" +
		"rvZ8kp41wjAfBgNVHSMEGDAWgBQPUCQx5Lq8sZlJJjXtDtB1/pyfVTCCAYMGA1UdIASCAXow" +
		"ggF2MFsGBmBMAQIBCTBRME8GCCsGAQUFBwIBFkNodHRwOi8vY2VydGlmaWNhZG9kaWdpdGFs" +
		"LmNhaXhhLmdvdi5ici9kb2N1bWVudG9zL2RwY2FjLWNhaXhhcGoucGRmMFsGBmBMAQIDCTBR" +
		"ME8GCCsGAQUFBwIBFkNodHRwOi8vY2VydGlmaWNhZG9kaWdpdGFsLmNhaXhhLmdvdi5ici9k" +
		"b2N1bWVudG9zL2RwY2FjLWNhaXhhcGoucGRmMFwGB2BMAQKCLwQwUTBPBggrBgEFBQcCARZD" +
		"aHR0cDovL2NlcnRpZmljYWRvZGlnaXRhbC5jYWl4YS5nb3YuYnIvZG9jdW1lbnRvcy9kcGNh" +
		"Yy1jYWl4YXBqLnBkZjBcBgdgTAECgjADMFEwTwYIKwYBBQUHAgEWQ2h0dHA6Ly9jZXJ0aWZp" +
		"Y2Fkb2RpZ2l0YWwuY2FpeGEuZ292LmJyL2RvY3VtZW50b3MvZHBjYWMtY2FpeGFwai5wZGYw" +
		"gbEGA1UdHwSBqTCBpjAroCmgJ4YlaHR0cDovL2xjci5jYWl4YS5nb3YuYnIvYWNjYWl4YXYy" +
		"LmNybDAsoCqgKIYmaHR0cDovL2xjcjIuY2FpeGEuZ292LmJyL2FjY2FpeGF2Mi5jcmwwSaBH" +
		"oEWGQ2h0dHA6Ly9yZXBvc2l0b3Jpby5pY3BicmFzaWwuZ292LmJyL2xjci9DQUlYQS9BQ0NB" +
		"SVhBL2FjY2FpeGF2Mi5jcmwwDQYJKoZIhvcNAQENBQADggIBAGFZij0Dp82GscDmJ9/hnIwc" +
		"G30zI5ztw7pWvMRenQbI7AlVHuQ2JQsseERK/tPkjtdcE+M/7W1DXXGcBhS2VTHRdPmDbjeu" +
		"ppsgUf/EAAbo/sdu77tEitbLKrNjy9Rc07lQyq3q9VtkYF3Vb9hj/mURB7tIqkokXWxTiZrS" +
		"PSBnpG+TUhvHtPsAZ3XSYe+UmtTXSZWiyUi4JmcacSaV5Mjx6jQwbRL1aYj0BRBw0H58rvsl" +
		"h4H//3azcQXv2jm+UsNeJcazYKKUhSRXMtX7Ytontd6ejNlIW/CpUJpOqR44A5Az4IC9eWWR" +
		"vy/w0WGUakzB9VaZeuzkhnjLYC3+8zyuWvm1U+a5ATe2hYmhOm1yq909/yJOBIYXL1g73ZnY" +
		"Hyx1eBJih3FQJzCoAvEiivkszrUoMFUxVCqL8Wf59WM/FLnafm7DhjjnOt7SI68T17mzWLb4" +
		"E3TFKUzUNZJTdGGQ49wPFwzOB/pV6jpI7J0NOxeMX0xJA0UonszcKqiLQqxTpRiHnXNM+d7x" +
		"LJ5hf5coPR5Jvg4XTCCpPS4PFGqQfAwqw6YsbvCifJTePi4GhMEwXE1IuFMEWb0o9Y6Z4YhX" +
		"2ht2sbPtWeQWshgCl903LxaNr9A3wBWF2IJVTclaeY97ORYTQc38npAvrdvIL6pEsL/UhiFn" +
		"xjNiVjc2KiKpMIIFijCCBHKgAwIBAgIITce3fC8d4QkwDQYJKoZIhvcNAQEFBQAwbjELMAkG" +
		"A1UEBhMCQlIxEzARBgNVBAoTCklDUC1CcmFzaWwxNDAyBgNVBAsTK0F1dG9yaWRhZGUgQ2Vy" +
		"dGlmaWNhZG9yYSBSYWl6IEJyYXNpbGVpcmEgdjExFDASBgNVBAMTC0FDIENBSVhBIHYxMB4X" +
		"DTExMDEyNDE0NTYyOVoXDTE0MTIzMTE0NTYyOVowXTELMAkGA1UEBhMCQlIxEzARBgNVBAoM" +
		"CklDUC1CcmFzaWwxIDAeBgNVBAsMF0NhaXhhIEVjb25vbWljYSBGZWRlcmFsMRcwFQYDVQQD" +
		"DA5BQyBDQUlYQSBQSiB2MTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIoyb+8U" +
		"AlB3Che93c6ty6tCV8sSflQfmUvKG9ncmd7W26a0hSxOYCR86i26F7kKLlJSkJfGOlhbyesO" +
		"4/+VrgBfKOVVal2+u+aTRYcW5u3umWZe2iKR+yBrpWGt+eJu6l/oB5vSrWhdpMwQcGx0e2nN" +
		"3SAWT7aOhwCbJLmqwKTuLXxV3zwtcI94Op6lOpkqqbSU1ycBm0eRVDokjnKaJXML7WYe5pDk" +
		"H4fLr60BFuVmD20JkaeJLVckdCU2p6Byq6967DDhT50YF6IcANvuI4Ys8FLigMxs0adv7OHc" +
		"enRTMrJDnKALCZOHtTJKbVE1gjDZ1tK0XqrQuEZBO4Qlaz8CAwEAAaOCAjswggI3MA8GA1Ud" +
		"EwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdDgQWBBTcIIlQnNfJhY2wV1YpeQt/" +
		"c6qXtDAfBgNVHSMEGDAWgBRaUFKlOo7vGHxvYPGUPJJnaa27TDCBxQYDVR0gBIG9MIG6MFsG" +
		"BmBMAQIBCTBRME8GCCsGAQUFBwIBFkNodHRwOi8vY2VydGlmaWNhZG9kaWdpdGFsLmNhaXhh" +
		"Lmdvdi5ici9kb2N1bWVudG9zL2RwY2FjLWNhaXhhcGoucGRmMFsGBmBMAQIDCTBRME8GCCsG" +
		"AQUFBwIBFkNodHRwOi8vY2VydGlmaWNhZG9kaWdpdGFsLmNhaXhhLmdvdi5ici9kb2N1bWVu" +
		"dG9zL2RwY2FjLWNhaXhhcGoucGRmMIGzBgNVHR8EgaswgagwLKAqoCiGJmh0dHA6Ly9sY3Iu" +
		"Y2FpeGEuZ292LmJyL2FjY2FpeGF2MS5jcmwgMC2gK6AphidodHRwOi8vbGNyMi5jYWl4YS5n" +
		"b3YuYnIvYWNjYWl4YXYxLmNybCAwSaBHoEWGQ2h0dHA6Ly9yZXBvc2l0b3Jpby5pY3BicmFz" +
		"aWwuZ292LmJyL2xjci9DQUlYQS9BQ0NBSVhBL2FjY2FpeGF2MS5jcmwwVgYIKwYBBQUHAQEE" +
		"SjBIMEYGCCsGAQUFBzAChjpodHRwOi8vY2VydGlmaWNhZG9kaWdpdGFsLmNhaXhhLmdvdi5i" +
		"ci9haWEvYWNjYWl4YXBqdjEucDdiMA0GCSqGSIb3DQEBBQUAA4IBAQAiqKoR9R0LGwGLe6Iv" +
		"bdWy89LDVC7kSV6FdjcAERb3Qt8JGsHSul2EiRIoIRwabJHsRYiBD9QsC6891ZFWytBLy+P0" +
		"4b4hD5vjbxVSmK3n7MnlpS4qkjXoIGNgydg3ajZ2g35BUEwfpdw59rx3Un0/4zKMNIGT/btN" +
		"0bSiNk2SdkdZWeGyVyOPKsR3UYhcc6oLEe29eZpnuw9OwKGQzJFQX3X5OKHMf94PWnPU3ZOE" +
		"nuEYLMlLAJLAFhAOi7+52tlh6wEg3DKRjwvcztr+bNwsXQ5S8TIRNwMM5Bol5+udiMLgzZYy" +
		"L5xwq54EXJZjsNYkuNRMOFrAi2Qwo3WQRG6/MIIFMjCCBBqgAwIBAgIIfeKxbMDCGLcwDQYJ" +
		"KoZIhvcNAQEFBQAwbjELMAkGA1UEBhMCQlIxEzARBgNVBAoTCklDUC1CcmFzaWwxNDAyBgNV" +
		"BAsTK0F1dG9yaWRhZGUgQ2VydGlmaWNhZG9yYSBSYWl6IEJyYXNpbGVpcmEgdjExFDASBgNV" +
		"BAMTC0FDIENBSVhBIHYxMB4XDTExMDYwODE5NTUyMFoXDTE0MTIzMTE5NTUyMFowXzELMAkG" +
		"A1UEBhMCQlIxEzARBgNVBAoMCklDUC1CcmFzaWwxIDAeBgNVBAsMF0NhaXhhIEVjb25vbWlj" +
		"YSBGZWRlcmFsMRkwFwYDVQQDDBBBQyBDQUlYQSBQRi0xIHYxMIIBIjANBgkqhkiG9w0BAQEF" +
		"AAOCAQ8AMIIBCgKCAQEA4fNYV95bsI/fJGhkK1HHWvyQqN4hNWZPw+vRt/WTC/FDnEpbP2hp" +
		"gfM5n6M7BaJVPvj3sGX8d7V8YrSsrZ0gGcMk1j5T1TfAY/7C6ZhjPF6oapUp1aBYUNR9kVtY" +
		"VsT0fBJM1NZl2pClV89twHvxMsOOOehYuSL0LrMWKK9T8YOp067OiQl0UgjvpHMwWS/OV4vV" +
		"IisoUSerSDdOONmKN1qzRe8FzOfslXrVpt2o77/6Jq5e3TNXObLL1RVUI8gQhqCHfh8YbuI5" +
		"ntkkOj3cNBnm1yVW9/MCgE4ZJbczDf/NwNHlFO5HCLXPjMTNA9xAT4QTFnf/jb7C36hEbYGh" +
		"YQIDAQABo4IB4TCCAd0wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0O" +
		"BBYEFNjF/HxGKRKJNnvC1zSRn8MXL3unMB8GA1UdIwQYMBaAFFpQUqU6ju8YfG9g8ZQ8kmdp" +
		"rbtMMIHFBgNVHSAEgb0wgbowWwYGYEwBAgEIMFEwTwYIKwYBBQUHAgEWQ2h0dHA6Ly9jZXJ0" +
		"aWZpY2Fkb2RpZ2l0YWwuY2FpeGEuZ292LmJyL2RvY3VtZW50b3MvZHBjYWMtY2FpeGFwZi5w" +
		"ZGYwWwYGYEwBAgMIMFEwTwYIKwYBBQUHAgEWQ2h0dHA6Ly9jZXJ0aWZpY2Fkb2RpZ2l0YWwu" +
		"Y2FpeGEuZ292LmJyL2RvY3VtZW50b3MvZHBjYWMtY2FpeGFwZi5wZGYwgbEGA1UdHwSBqTCB" +
		"pjAroCmgJ4YlaHR0cDovL2xjci5jYWl4YS5nb3YuYnIvYWNjYWl4YXYxLmNybDAsoCqgKIYm" +
		"aHR0cDovL2xjcjIuY2FpeGEuZ292LmJyL2FjY2FpeGF2MS5jcmwwSaBHoEWGQ2h0dHA6Ly9y" +
		"ZXBvc2l0b3Jpby5pY3BicmFzaWwuZ292LmJyL2xjci9DQUlYQS9BQ0NBSVhBL2FjY2FpeGF2" +
		"MS5jcmwwDQYJKoZIhvcNAQEFBQADggEBAGo7Cs3WgWfCVeqxC+ChdhlrBGVSLDXPiNbTZle/" +
		"vgt/H8p+mnM3Q5l4UKu/A63nwOmI7I4ef4qImGUcuV0Q9OkKQZTYfVLNNbnEZiI70STMB1MN" +
		"5YdTcFopxVXsfZUqXIqil0LxRr+IwVilBkYOEpUG08jsZkl2Hg8rJJIU5b0CThMAZVaf9ruv" +
		"yZTZtboOk7B34Cyiy+37J7zKnVW2b7skgK9HISTWQxaiSYkwoa3X2CbaVbXYYRLq0fJ9cUh8" +
		"8W1j3bFaZTTZiQJeT/I/+M3l5d3tn7q4nttisvK/vWQQ2CKTFtgmPeDDblXSWD+msc/Ryhsa" +
		"N+BtHb09fZrw7mowggcwMIIFGKADAgECAggo7qV8NikE2DANBgkqhkiG9w0BAQ0FADBuMQsw" +
		"CQYDVQQGEwJCUjETMBEGA1UEChMKSUNQLUJyYXNpbDE0MDIGA1UECxMrQXV0b3JpZGFkZSBD" +
		"ZXJ0aWZpY2Fkb3JhIFJhaXogQnJhc2lsZWlyYSB2MjEUMBIGA1UEAxMLQUMgQ0FJWEEgdjIw" +
		"HhcNMTExMjIzMTM1MjU4WhcNMTkxMjIxMTM1MjU4WjBdMQswCQYDVQQGEwJCUjETMBEGA1UE" +
		"CgwKSUNQLUJyYXNpbDEgMB4GA1UECwwXQ2FpeGEgRWNvbm9taWNhIEZlZGVyYWwxFzAVBgNV" +
		"BAMMDkFDIENBSVhBIFBGIHYyMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA1a+y" +
		"82epY2D6tHzasb9akCzo0qEqmBdx9GDUbyicCuFD0xJoucZhMyCRaxsJ86usIC0TlNVQMkbr" +
		"T6zC3ACwg+RkuXsvCFDoABBNf2qScow9XuwBmVbdIk75/m66tPz3hCmrMFbbbNPp2BKWEQPk" +
		"cdWpFuxQehgMf92dNAK/GQfIMQvCjCMd9+Dz/zRU4T2RQCMMBYtjhlO9b7YpElcXNjINJwDz" +
		"1/lozVGUtSEBbaGr8qae6d8ywJVQ2pDYtXA0IWOV+fQwd2IT86igiwv98T2BS510LDWH6DUh" +
		"yCOLh2oI8KiO7j9eUN5MX1nb2oKsu65IqUh1N1RTZo/MsaTPPTj9Rq8BqmA5Yh77kOKu0twF" +
		"JPiVO/1NxeV4U23KAEIUU1sRylraKpip3D0Sd0LeTuphp6KOBmCtEEfhHz2TSNsxkbRsoi20" +
		"IiLM4JwfMkmEbH6dA26hW894vIFwjFJf2u81PPMgi7IfaNWWGuqAAmcOxqxNbfgUlMH0FWoy" +
		"czWTj4g7Zpz7MqB+uBM7eXPKolxPI3ZQJupXDatKcvEHtllO67eufyOhdABDcAGTqmFOfNnT" +
		"xF8crhmL53F0VbHAJmN9GfspK+BgsyMyY0qpu9a2vjUU3bNo7mhzjoIoowiAVKEmRYvt+9pQ" +
		"ebFz3HzRhmw5qatpTmC+JdGd6F/I3dsCAwEAAaOCAeEwggHdMA8GA1UdEwEB/wQFMAMBAf8w" +
		"DgYDVR0PAQH/BAQDAgEGMB0GA1UdDgQWBBSeKtZBVwCvW+0H+NBcjvNt5uUMGjAfBgNVHSME" +
		"GDAWgBQPUCQx5Lq8sZlJJjXtDtB1/pyfVTCBxQYDVR0gBIG9MIG6MFsGBmBMAQIBCDBRME8G" +
		"CCsGAQUFBwIBFkNodHRwOi8vY2VydGlmaWNhZG9kaWdpdGFsLmNhaXhhLmdvdi5ici9kb2N1" +
		"bWVudG9zL2RwY2FjLWNhaXhhcGYucGRmMFsGBmBMAQIDCDBRME8GCCsGAQUFBwIBFkNodHRw" +
		"Oi8vY2VydGlmaWNhZG9kaWdpdGFsLmNhaXhhLmdvdi5ici9kb2N1bWVudG9zL2RwY2FjLWNh" +
		"aXhhcGYucGRmMIGxBgNVHR8EgakwgaYwK6ApoCeGJWh0dHA6Ly9sY3IuY2FpeGEuZ292LmJy" +
		"L2FjY2FpeGF2Mi5jcmwwLKAqoCiGJmh0dHA6Ly9sY3IyLmNhaXhhLmdvdi5ici9hY2NhaXhh" +
		"djIuY3JsMEmgR6BFhkNodHRwOi8vcmVwb3NpdG9yaW8uaWNwYnJhc2lsLmdvdi5ici9sY3Iv" +
		"Q0FJWEEvQUNDQUlYQS9hY2NhaXhhdjIuY3JsMA0GCSqGSIb3DQEBDQUAA4ICAQCDl3Ps0JiV" +
		"CLU79Yg4evZU9YRolcs/pyJVVbbW4dqinvxWd3A5P01uFMA0sL3aZpJMIrdB4lou0vmUCMtS" +
		"jeYDTL3vqeRpeVBbaMVHd4wivu9TvFJf94vnXjh7ohRtj5hLvgTAfxaf+M/YA5Hmvz0JM1D4" +
		"KozLwscVpvu0dzAKZSdqVtO3u3rMA03yQkbzues27e0uGFPaRoZ7Y7tRRXdeLXs2hRX3aLxP" +
		"S7R5Dw2y/jKq2yBJQJ5uOeWBNomyQhSjDRQyBHNlZFo730sXhTwGG88XzZRlaYPMyb4q2zDD" +
		"L6dYYSZLNM6Vou/1RjO6fWQMwLqmpbOLIuObPu94z15pMrBQFOuoB7/lTwVhK596HiP2nwoY" +
		"ouTBOPACRtCONGL+8pdkWrDS/UDGgLj01nS2864k9ymtcxzqJ2GOC9rPVh7S5ekzJPhunl/X" +
		"+5+Qw+uiItSj/Pxi09n/DOnK9W2V77hGLdnupZEDA1nY13vSO0qN8bUYiLduVN0xYvWCvr60" +
		"wsHo6fJlOHxfZoMK11DL9LnkmMP63YzG1bbYhpL4o5YXYgZZmbgvRv+sbC+TRk3R2MkTKtpz" +
		"tjjXPIyXMmM+Wx60ldX55c8GSST9GomegcH5A4bMrX6ywnhyr7RJEfofoy5At2Q9xdHHWDVr" +
		"Hqb2N1Yu3Aosunf5Je3TVllUEzCCBYowggRyoAMCAQICCGOZvGd7dH5OMA0GCSqGSIb3DQEB" +
		"BQUAMG4xCzAJBgNVBAYTAkJSMRMwEQYDVQQKEwpJQ1AtQnJhc2lsMTQwMgYDVQQLEytBdXRv" +
		"cmlkYWRlIENlcnRpZmljYWRvcmEgUmFpeiBCcmFzaWxlaXJhIHYxMRQwEgYDVQQDEwtBQyBD" +
		"QUlYQSB2MTAeFw0xMTAxMjQxNDUyNDVaFw0xNDEyMzExNDUyNDVaMF0xCzAJBgNVBAYTAkJS" +
		"MRMwEQYDVQQKDApJQ1AtQnJhc2lsMSAwHgYDVQQLDBdDYWl4YSBFY29ub21pY2EgRmVkZXJh" +
		"bDEXMBUGA1UEAwwOQUMgQ0FJWEEgUEYgdjEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK" +
		"AoIBAQDUbGB//Rz3iwzRkwM9I07GFrQwLmUQ8paw5zFq0oz6HnWP34F7oE3rFo9X6ycmphnB" +
		"nwN6GLYEiO3ClY+u23EUBvUaBX3gNNYbkotncokwpg4QoZfOWyAhWuhpMNaZV9iXShAdQlgs" +
		"jItkRvC93y/AqCWd2BKutcVT1gki1Qt/YR0H1IeetxsPtN20e3xsRc5SmOiXAX35/JlEsW0W" +
		"zceqCYNpYj8oOFF4aDy4eAdBQKRduxho8SDqA10A1NEN88RKrpMmXn/j+lO4JYcFRfpzMPT/" +
		"JRQZtkuNoqjm0jVA9eqV9Aoe/1oK8cTkVNCoIOQqrUM7mhN4Qp5Kis+AnNklAgMBAAGjggI7" +
		"MIICNzAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUfYLziARX" +
		"poUTV4wBJpZ1s93jCTswHwYDVR0jBBgwFoAUWlBSpTqO7xh8b2DxlDySZ2mtu0wwgcUGA1Ud" +
		"IASBvTCBujBbBgZgTAECAwgwUTBPBggrBgEFBQcCARZDaHR0cDovL2NlcnRpZmljYWRvZGln" +
		"aXRhbC5jYWl4YS5nb3YuYnIvZG9jdW1lbnRvcy9kcGNhYy1jYWl4YXBmLnBkZjBbBgZgTAEC" +
		"AQgwUTBPBggrBgEFBQcCARZDaHR0cDovL2NlcnRpZmljYWRvZGlnaXRhbC5jYWl4YS5nb3Yu" +
		"YnIvZG9jdW1lbnRvcy9kcGNhYy1jYWl4YXBmLnBkZjCBswYDVR0fBIGrMIGoMCygKqAohiZo" +
		"dHRwOi8vbGNyLmNhaXhhLmdvdi5ici9hY2NhaXhhdjEuY3JsIDAtoCugKYYnaHR0cDovL2xj" +
		"cjIuY2FpeGEuZ292LmJyL2FjY2FpeGF2MS5jcmwgMEmgR6BFhkNodHRwOi8vcmVwb3NpdG9y" +
		"aW8uaWNwYnJhc2lsLmdvdi5ici9sY3IvQ0FJWEEvQUNDQUlYQS9hY2NhaXhhdjEuY3JsMFYG" +
		"CCsGAQUFBwEBBEowSDBGBggrBgEFBQcwAoY6aHR0cDovL2NlcnRpZmljYWRvZGlnaXRhbC5j" +
		"YWl4YS5nb3YuYnIvYWlhL2FjY2FpeGFwZnYxLnA3YjANBgkqhkiG9w0BAQUFAAOCAQEAXRei" +
		"0hphXf8SoGYDgY93qBDJoKboNRU24pC8j7D3YnC/Km1ZkETIf0OZh+aLHZ57QJXVQiz7Qkyw" +
		"zon5YSJFgX32tDsj6nsk2q0eBdBZ3Z4MAQrmEvADUkQbm19c5Y8cNG1Y7utfxTz4ZjTwV6mC" +
		"HkRPpCCAnyPQz2j7yNNoWrr/nLSQyo7o97rAdQSIR0jw/vkPQND7fmsmh6chyXL46EUWiXSv" +
		"X9L/iiDKG832DO1HRWYaUQsMrBO3Ld0WHO3FcF2S4Ybua/ycWvBO7lBBuzFxJ/XKUzcKeM5w" +
		"hwPhoDc0KOhcU2JfBJbHI7rR+QcWIiCkJlqU69KDqcYPhXTiDzEA";
	private static boolean parsingTest()
	{
		boolean ret = false;
		System.out.print("CMSSignedData parsing test... ");
		KeyStore store;
		try
		{
			store = KeyStore.getInstance("JKS");
			store.load(new ByteArrayInputStream(NharuArrays.fromBase64(TRUST_STORE_JKS.getBytes())), "secret".toCharArray());
			final NharuCertStore trusted = new NharuCertStore(new DERX509CollectionParams(store));
			CMSSignedData doc;
			try
			{
				doc = new CMSSignedData(NharuArrays.fromBase64(OPENSSL_SIGNED_DER.getBytes()));
				try
				{
					doc.verify(trusted);
					System.out.println("Done!");
					ret = true;
				}
				finally { doc.releaseDocument(); }
			}
			catch (final CMSParsingException e) { e.printStackTrace(); }
		}
		catch (final GeneralSecurityException e) { e.printStackTrace(); }
		catch (final IOException e) { e.printStackTrace(); }
		return ret;
	}
	private static boolean certsP7BTest()
	{
		boolean ret = false;
		System.out.print("CMSSignedData certificate chain test... ");
		try
		{
			CMSSignedData doc = CMSDocument.parse(NharuArrays.fromBase64(CHAIN_DER.getBytes()));
			try
			{
				X509Certificate[] certs = doc.getCertificates();
				if (certs.length != 14) throw new CMSException("Invalid chain length");
				System.out.println("Done!");
				ret = true;
			}
			finally { doc.releaseDocument(); }
		}
		catch (CMSException e) { e.printStackTrace(); }
		return ret;
	}
	private static boolean generateTest()
	{
		boolean ret = false;
		System.out.print("CMSSignedData generation test... ");
		try
		{
			final NharuKeyStore signer = NharuKeyStore.getInstance();
			try
			{
				final CMSSignedDataBuilder builder = new CMSSignedDataBuilder("eContent".getBytes(), true);
				try
				{
					final NharuX509Certificate[] chain = signer.getSignerChain();
					if (chain == null) throw new RuntimeException("BlindSigner not configured properly");
					builder.addCertificates(chain);
					builder.sign("SHA1withRSA", chain[0], signer);
					final byte[] encoding = builder.encode();
					KeyStore store;
					try
					{
						store = KeyStore.getInstance("JKS");
						store.load(new ByteArrayInputStream(NharuArrays.fromBase64(TRUST_STORE_JKS.getBytes())), "secret".toCharArray());
						final NharuCertStore trusted = new NharuCertStore(new DERX509CollectionParams(store));
						CMSSignedData doc;
						try
						{
							doc = new CMSSignedData(encoding);
							try
							{
								doc.verify(trusted);
								System.out.println("Done!");
								ret = true;
							}
							finally { doc.releaseDocument(); }
						}
						catch (final CMSParsingException e) { e.printStackTrace(); }
					}
					catch (final GeneralSecurityException e) { e.printStackTrace(); }
					catch (final IOException e) { e.printStackTrace(); }
				}
				finally { builder.releaseBuilder(); }
			}
			finally { signer.releaseObject(); }
		}
		catch (final GeneralSecurityException e) { e.printStackTrace(); }
		return ret;
	}

	private static final byte[] ENVELOPED_CMS =
	{
		0x30, (byte)0x82, 0x01, (byte)0xE2, 0x06, 0x09, 0x2A, (byte)0x86, 0x48, (byte)0x86, (byte)0xF7, 0x0D, 0x01, 0x07, 0x03, (byte)0xA0,
		(byte)0x82, 0x01, (byte)0xD3, 0x30, (byte)0x82, 0x01, (byte)0xCF, 0x02, 0x01, 0x00, 0x31, (byte)0x82, 0x01, (byte)0x93, 0x30, (byte)0x82,
		0x01, (byte)0x8F, 0x02, 0x01, 0x00, 0x30, 0x77, 0x30, 0x72, 0x31, 0x0B, 0x30, 0x09, 0x06, 0x03, 0x55,
		0x04, 0x06, 0x13, 0x02, 0x42, 0x52, 0x31, 0x13, 0x30, 0x11, 0x06, 0x03, 0x55, 0x04, 0x0A, 0x13,
		0x0A, 0x50, 0x4B, 0x49, 0x20, 0x42, 0x72, 0x61, 0x7A, 0x69, 0x6C, 0x31, 0x1F, 0x30, 0x1D, 0x06,
		0x03, 0x55, 0x04, 0x0B, 0x13, 0x16, 0x50, 0x4B, 0x49, 0x20, 0x52, 0x75, 0x6C, 0x65, 0x72, 0x20,
		0x66, 0x6F, 0x72, 0x20, 0x41, 0x6C, 0x6C, 0x20, 0x43, 0x61, 0x74, 0x73, 0x31, 0x2D, 0x30, 0x2B,
		0x06, 0x03, 0x55, 0x04, 0x03, 0x13, 0x24, 0x43, 0x6F, 0x6D, 0x6D, 0x6F, 0x6E, 0x20, 0x4E, 0x61,
		0x6D, 0x65, 0x20, 0x66, 0x6F, 0x72, 0x20, 0x41, 0x6C, 0x6C, 0x20, 0x43, 0x61, 0x74, 0x73, 0x20,
		0x45, 0x6E, 0x64, 0x20, 0x55, 0x73, 0x65, 0x72, 0x20, 0x43, 0x41, 0x02, 0x01, 0x00, 0x30, 0x0D,
		0x06, 0x09, 0x2A, (byte)0x86, 0x48, (byte)0x86, (byte)0xF7, 0x0D, 0x01, 0x01, 0x07, 0x30, 0x00, 0x04, (byte)0x82, 0x01,
		0x00, (byte)0xA7, 0x72, (byte)0xCE, (byte)0xD0, (byte)0xCF, (byte)0x91, 0x73, 0x0A, 0x60, (byte)0xCA, (byte)0x84, (byte)0xFE, (byte)0x9F, (byte)0xCF, (byte)0xAA,
		0x52, (byte)0x93, (byte)0xB2, 0x37, 0x67, 0x63, 0x2E, (byte)0xF3, (byte)0xD0, 0x1D, (byte)0xC5, 0x05, (byte)0xAC, (byte)0xA2, 0x5A, 0x36,
		(byte)0xF9, 0x6A, (byte)0xF7, (byte)0xA5, (byte)0xDC, 0x68, 0x13, (byte)0x91, 0x1E, 0x78, (byte)0xC0, 0x53, 0x78, (byte)0xCB, 0x05, (byte)0x9D,
		0x08, 0x29, 0x6A, (byte)0xFE, 0x3F, (byte)0xCA, 0x0C, 0x32, 0x3A, (byte)0xFD, (byte)0xBE, 0x59, (byte)0x9F, 0x2E, 0x19, 0x3E,
		(byte)0x83, 0x4B, 0x01, (byte)0x8D, 0x06, 0x3B, (byte)0xDB, 0x7C, 0x4E, 0x33, (byte)0xF8, (byte)0xA6, 0x4D, (byte)0xAA, 0x56, (byte)0xA3,
		(byte)0xFC, (byte)0xB2, 0x02, (byte)0xD9, 0x18, (byte)0x91, (byte)0xE2, (byte)0xA2, (byte)0xB5, (byte)0xB7, (byte)0xDA, 0x25, 0x41, (byte)0x8E, 0x70, (byte)0xBB,
		0x35, 0x47, (byte)0x85, (byte)0x8C, 0x0D, 0x48, 0x18, 0x16, (byte)0xC5, 0x6D, (byte)0x81, 0x6B, (byte)0xA6, 0x29, 0x00, (byte)0xEF,
		0x59, (byte)0xD3, 0x26, (byte)0x94, 0x37, (byte)0xF8, (byte)0x80, 0x28, (byte)0xEE, 0x06, 0x30, 0x38, (byte)0x8A, (byte)0xEC, (byte)0x8B, 0x25,
		(byte)0xE8, 0x74, 0x2A, (byte)0xD0, (byte)0x95, 0x01, 0x39, (byte)0xF0, (byte)0xA9, 0x41, (byte)0xBA, 0x59, 0x23, 0x19, 0x6D, (byte)0xB9,
		(byte)0x99, (byte)0x92, (byte)0xC6, 0x15, (byte)0xF0, (byte)0xB9, (byte)0x85, 0x7A, (byte)0xD5, 0x71, (byte)0xCA, 0x48, 0x30, 0x4A, 0x4A, (byte)0xEE,
		0x37, 0x01, 0x7B, 0x53, 0x69, 0x6E, (byte)0xDE, (byte)0x91, (byte)0x9B, (byte)0x85, (byte)0xC2, 0x1F, (byte)0xE3, 0x5D, 0x57, 0x0D,
		(byte)0x80, (byte)0xDB, (byte)0xDC, 0x1A, 0x09, (byte)0x9D, 0x34, 0x7D, (byte)0xEC, (byte)0xBB, 0x44, 0x29, (byte)0xC9, 0x48, (byte)0xE1, 0x79,
		0x38, (byte)0xA7, (byte)0xDD, 0x6A, (byte)0x9C, (byte)0x9D, (byte)0xA3, 0x21, (byte)0xEE, 0x5F, (byte)0xA8, (byte)0xAD, 0x04, (byte)0xF1, (byte)0xD9, 0x3B,
		(byte)0x9A, 0x01, (byte)0xC5, 0x01, 0x23, (byte)0x9A, (byte)0xEA, 0x2B, (byte)0x8C, 0x43, (byte)0x82, (byte)0xDB, 0x5A, (byte)0xDA, (byte)0xF6, (byte)0x98,
		0x1F, (byte)0xC3, 0x7C, (byte)0xCB, (byte)0xB0, (byte)0xEF, 0x68, 0x6D, (byte)0xD9, (byte)0xA5, 0x11, (byte)0xD4, 0x75, (byte)0xBD, 0x40, (byte)0xA1,
		(byte)0x97, 0x39, 0x2D, (byte)0x92, (byte)0x9A, 0x40, 0x6E, (byte)0xF5, 0x5E, 0x2B, 0x0F, (byte)0x85, 0x2B, (byte)0xBB, (byte)0x9B, 0x37,
		0x1E, 0x30, 0x33, 0x06, 0x09, 0x2A, (byte)0x86, 0x48, (byte)0x86, (byte)0xF7, 0x0D, 0x01, 0x07, 0x01, 0x30, 0x14,
		0x06, 0x08, 0x2A, (byte)0x86, 0x48, (byte)0x86, (byte)0xF7, 0x0D, 0x03, 0x07, 0x04, 0x08, (byte)0xFD, 0x30, (byte)0xEC, 0x19,
		0x46, 0x34, (byte)0xA4, 0x69, (byte)0x80, 0x10, 0x0D, 0x7B, 0x32, (byte)0x9E, 0x79, (byte)0xA3, (byte)0xE8, (byte)0xBF, 0x1D, (byte)0xC6,
		0x6F, 0x68, 0x0D, 0x04, (byte)0xE7, 0x06
	};
	private static final byte[] PLAIN_TEXT = "Plain text\n".getBytes();
	private static boolean parsingOpenSSLEnvelopedTest()
	{
		boolean ret = false;
		System.out.print("CMSEnvelolpedData parsing of OpenSSL document test... ");
		try
		{
			final NharuKeyStore store = NharuKeyStore.getInstance();
			try
			{
				final CMSEnvelopedData document = new CMSEnvelopedData(ENVELOPED_CMS);
				try
				{
					if (!NharuArrays.equals(PLAIN_TEXT, document.decrypt(store))) throw new RuntimeException("Encrypted document does not match");
					System.out.println("Done!");
					ret = true;
				} 
				finally { document.releaseDocument(); }
			}
			finally { store.releaseObject(); }
		}
		catch (final UnrecoverableKeyException | KeyStoreException | CMSException e) { e.printStackTrace(); }
		return ret;
	}
	private static final byte[] RECIP_CERT =
	{
		0x30, (byte)0x82, 0x04, (byte)0xE6, 0x30, (byte)0x82, 0x03, (byte)0xCE, (byte)0xA0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x01, 0x00,
		0x30, 0x0D, 0x06, 0x09, 0x2A, (byte)0x86, 0x48, (byte)0x86, (byte)0xF7, 0x0D, 0x01, 0x01, 0x0B, 0x05, 0x00, 0x30,
		0x72, 0x31, 0x0B, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x42, 0x52, 0x31, 0x13,
		0x30, 0x11, 0x06, 0x03, 0x55, 0x04, 0x0A, 0x13, 0x0A, 0x50, 0x4B, 0x49, 0x20, 0x42, 0x72, 0x61,
		0x7A, 0x69, 0x6C, 0x31, 0x1F, 0x30, 0x1D, 0x06, 0x03, 0x55, 0x04, 0x0B, 0x13, 0x16, 0x50, 0x4B,
		0x49, 0x20, 0x52, 0x75, 0x6C, 0x65, 0x72, 0x20, 0x66, 0x6F, 0x72, 0x20, 0x41, 0x6C, 0x6C, 0x20,
		0x43, 0x61, 0x74, 0x73, 0x31, 0x2D, 0x30, 0x2B, 0x06, 0x03, 0x55, 0x04, 0x03, 0x13, 0x24, 0x43,
		0x6F, 0x6D, 0x6D, 0x6F, 0x6E, 0x20, 0x4E, 0x61, 0x6D, 0x65, 0x20, 0x66, 0x6F, 0x72, 0x20, 0x41,
		0x6C, 0x6C, 0x20, 0x43, 0x61, 0x74, 0x73, 0x20, 0x45, 0x6E, 0x64, 0x20, 0x55, 0x73, 0x65, 0x72,
		0x20, 0x43, 0x41, 0x30, 0x1E, 0x17, 0x0D, 0x31, 0x35, 0x31, 0x32, 0x32, 0x31, 0x31, 0x36, 0x35,
		0x34, 0x34, 0x34, 0x5A, 0x17, 0x0D, 0x31, 0x36, 0x31, 0x32, 0x32, 0x30, 0x31, 0x36, 0x35, 0x34,
		0x34, 0x34, 0x5A, 0x30, 0x5B, 0x31, 0x0B, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02,
		0x42, 0x52, 0x31, 0x13, 0x30, 0x11, 0x06, 0x03, 0x55, 0x04, 0x0A, 0x13, 0x0A, 0x50, 0x4B, 0x49,
		0x20, 0x42, 0x72, 0x61, 0x7A, 0x69, 0x6C, 0x31, 0x1F, 0x30, 0x1D, 0x06, 0x03, 0x55, 0x04, 0x0B,
		0x13, 0x16, 0x50, 0x4B, 0x49, 0x20, 0x52, 0x75, 0x6C, 0x65, 0x72, 0x20, 0x66, 0x6F, 0x72, 0x20,
		0x41, 0x6C, 0x6C, 0x20, 0x43, 0x61, 0x74, 0x73, 0x31, 0x16, 0x30, 0x14, 0x06, 0x03, 0x55, 0x04,
		0x03, 0x13, 0x0D, 0x46, 0x75, 0x6C, 0x61, 0x6E, 0x6F, 0x20, 0x64, 0x65, 0x20, 0x54, 0x61, 0x6C,
		0x30, (byte)0x82, 0x01, 0x22, 0x30, 0x0D, 0x06, 0x09, 0x2A, (byte)0x86, 0x48, (byte)0x86, (byte)0xF7, 0x0D, 0x01, 0x01,
		0x01, 0x05, 0x00, 0x03, (byte)0x82, 0x01, 0x0F, 0x00, 0x30, (byte)0x82, 0x01, 0x0A, 0x02, (byte)0x82, 0x01, 0x01,
		0x00, (byte)0xCE, 0x3E, 0x56, 0x18, 0x61, 0x37, 0x60, 0x17, 0x07, 0x58, 0x4D, (byte)0xEC, (byte)0x88, (byte)0xAE, 0x46,
		(byte)0xC8, 0x3B, (byte)0xE7, 0x07, 0x40, (byte)0xA6, 0x42, 0x50, 0x0C, (byte)0xD8, 0x48, 0x73, 0x4C, (byte)0xC0, 0x09, (byte)0xF8,
		(byte)0xD8, 0x2A, (byte)0xBC, 0x2E, (byte)0xD5, 0x33, 0x74, (byte)0xB2, (byte)0xA1, 0x65, (byte)0xC2, 0x04, 0x61, 0x0A, (byte)0xFF, 0x7C,
		(byte)0xD5, (byte)0x97, (byte)0xB1, (byte)0x89, 0x09, 0x36, (byte)0xCD, (byte)0x88, 0x7D, (byte)0xA8, 0x1A, 0x32, (byte)0xCA, (byte)0x8C, (byte)0xC9, (byte)0xFB,
		(byte)0x81, (byte)0xB2, 0x07, (byte)0xCE, (byte)0xDD, 0x1D, 0x20, 0x24, 0x0B, (byte)0xDF, (byte)0xFE, (byte)0xA9, 0x31, (byte)0xA2, 0x6C, 0x6E,
		0x5D, 0x2F, 0x1D, (byte)0xB5, 0x2D, (byte)0xFE, 0x2F, (byte)0xBE, (byte)0x89, 0x6C, (byte)0xBC, 0x7A, (byte)0xCA, 0x1B, (byte)0x93, 0x15,
		(byte)0xB5, (byte)0x98, (byte)0x88, (byte)0x9C, (byte)0x85, 0x61, (byte)0x97, (byte)0xFC, (byte)0x9D, (byte)0xA1, 0x47, 0x38, 0x40, (byte)0xCA, (byte)0xA4, 0x2B,
		(byte)0xB7, (byte)0xEF, 0x37, 0x24, (byte)0xE4, 0x62, 0x58, (byte)0xBC, 0x39, 0x4D, 0x54, (byte)0xA8, (byte)0xE4, (byte)0xE3, 0x37, (byte)0xDA,
		(byte)0xBB, 0x24, 0x57, 0x3A, 0x47, (byte)0xEC, 0x40, 0x40, (byte)0xCB, 0x1F, (byte)0x81, 0x71, (byte)0xA7, 0x19, 0x3A, (byte)0xB6,
		0x5F, 0x78, 0x3A, (byte)0xC4, (byte)0xC8, (byte)0xFA, (byte)0x91, 0x47, 0x1B, (byte)0xA6, (byte)0xD1, 0x19, (byte)0xE0, (byte)0xB4, 0x0A, (byte)0xFE,
		0x13, 0x50, 0x70, 0x37, (byte)0xA1, 0x5E, 0x3E, 0x33, 0x5D, 0x72, (byte)0x9C, (byte)0xFD, (byte)0xB2, (byte)0xAE, 0x05, (byte)0xAD,
		0x16, 0x59, (byte)0xE9, 0x02, 0x7D, (byte)0xFD, (byte)0xDD, 0x1A, 0x59, (byte)0xEE, 0x02, 0x57, 0x79, (byte)0xC4, (byte)0xE0, (byte)0xB0,
		0x5E, (byte)0xA0, (byte)0xF1, 0x09, (byte)0xA4, 0x12, (byte)0xEB, (byte)0xDD, 0x0B, 0x39, (byte)0x93, (byte)0xF1, 0x3F, (byte)0xC8, (byte)0xCB, 0x17,
		(byte)0xB0, 0x50, 0x31, (byte)0xB3, 0x58, 0x40, 0x7E, 0x5B, (byte)0xF2, 0x69, (byte)0x84, 0x15, 0x55, (byte)0x97, 0x38, 0x09,
		0x22, 0x17, 0x59, 0x4E, (byte)0x80, (byte)0xC9, 0x4D, 0x03, 0x34, 0x57, 0x57, 0x1F, 0x57, (byte)0xC9, 0x0C, (byte)0xDF,
		(byte)0x87, (byte)0x9D, (byte)0x81, (byte)0xB2, (byte)0x98, (byte)0xE0, (byte)0xD4, 0x63, (byte)0xC3, 0x60, 0x56, 0x54, (byte)0x97, 0x3F, 0x50, (byte)0xDE,
		(byte)0x97, 0x02, 0x03, 0x01, 0x00, 0x01, (byte)0xA3, (byte)0x82, 0x01, (byte)0x9C, 0x30, (byte)0x82, 0x01, (byte)0x98, 0x30, 0x09,
		0x06, 0x03, 0x55, 0x1D, 0x13, 0x04, 0x02, 0x30, 0x00, 0x30, 0x1D, 0x06, 0x03, 0x55, 0x1D, 0x0E,
		0x04, 0x16, 0x04, 0x14, (byte)0x87, (byte)0xBA, 0x7D, (byte)0xA1, (byte)0xC5, (byte)0xDC, 0x5A, 0x43, (byte)0xBD, 0x03, (byte)0x92, (byte)0xD4,
		(byte)0xD2, (byte)0xCB, (byte)0xA4, (byte)0xDE, (byte)0xE8, (byte)0xB9, (byte)0x91, 0x40, 0x30, 0x1F, 0x06, 0x03, 0x55, 0x1D, 0x23, 0x04,
		0x18, 0x30, 0x16, (byte)0x80, 0x14, 0x5C, 0x26, (byte)0xE7, (byte)0xBC, 0x23, 0x3C, (byte)0xB5, 0x32, (byte)0xBF, (byte)0x87, (byte)0xC4,
		(byte)0xC3, 0x45, (byte)0xA1, (byte)0xAE, 0x6C, 0x11, 0x2A, 0x50, 0x08, 0x30, 0x0B, 0x06, 0x03, 0x55, 0x1D, 0x0F,
		0x04, 0x04, 0x03, 0x02, 0x05, (byte)0xE0, 0x30, 0x29, 0x06, 0x03, 0x55, 0x1D, 0x25, 0x04, 0x22, 0x30,
		0x20, 0x06, 0x08, 0x2B, 0x06, 0x01, 0x05, 0x05, 0x07, 0x03, 0x02, 0x06, 0x08, 0x2B, 0x06, 0x01,
		0x05, 0x05, 0x07, 0x03, 0x04, 0x06, 0x0A, 0x2B, 0x06, 0x01, 0x04, 0x01, (byte)0x82, 0x37, 0x14, 0x02,
		0x02, 0x30, 0x2C, 0x06, 0x03, 0x55, 0x1D, 0x1F, 0x04, 0x25, 0x30, 0x23, 0x30, 0x21, (byte)0xA0, 0x1F,
		(byte)0xA0, 0x1D, (byte)0x86, 0x1B, 0x68, 0x74, 0x74, 0x70, 0x3A, 0x2F, 0x2F, 0x6C, 0x6F, 0x63, 0x61, 0x6C,
		0x68, 0x6F, 0x73, 0x74, 0x2F, 0x61, 0x63, 0x2F, 0x65, 0x6E, 0x64, 0x2E, 0x63, 0x72, 0x6C, 0x30,
		0x38, 0x06, 0x08, 0x2B, 0x06, 0x01, 0x05, 0x05, 0x07, 0x01, 0x01, 0x04, 0x2C, 0x30, 0x2A, 0x30,
		0x28, 0x06, 0x08, 0x2B, 0x06, 0x01, 0x05, 0x05, 0x07, 0x30, 0x02, (byte)0x86, 0x1C, 0x68, 0x74, 0x74,
		0x70, 0x3A, 0x2F, 0x2F, 0x6C, 0x6F, 0x63, 0x61, 0x6C, 0x68, 0x6F, 0x73, 0x74, 0x2F, 0x61, 0x63,
		0x2F, 0x65, 0x6E, 0x64, 0x2E, 0x68, 0x74, 0x6D, 0x6C, 0x30, 0x75, 0x06, 0x03, 0x55, 0x1D, 0x11,
		0x04, 0x6E, 0x30, 0x6C, (byte)0xA0, 0x38, 0x06, 0x05, 0x60, 0x4C, 0x01, 0x03, 0x01, (byte)0xA0, 0x2F, 0x04,
		0x2D, 0x31, 0x31, 0x31, 0x31, 0x31, 0x39, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31,
		0x31, 0x31, 0x31, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
		0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, (byte)0xA0, 0x17,
		0x06, 0x05, 0x60, 0x4C, 0x01, 0x03, 0x05, (byte)0xA0, 0x0E, 0x04, 0x0C, 0x30, 0x30, 0x30, 0x30, 0x30,
		0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, (byte)0xA0, 0x17, 0x06, 0x05, 0x60, 0x4C, 0x01, 0x03, 0x06,
		(byte)0xA0, 0x0E, 0x04, 0x0C, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
		0x30, 0x34, 0x06, 0x03, 0x55, 0x1D, 0x20, 0x04, 0x2D, 0x30, 0x2B, 0x30, 0x29, 0x06, 0x03, 0x2B,
		0x05, 0x08, 0x30, 0x22, 0x30, 0x20, 0x06, 0x08, 0x2B, 0x06, 0x01, 0x05, 0x05, 0x07, 0x02, 0x01,
		0x16, 0x14, 0x68, 0x74, 0x74, 0x70, 0x3A, 0x2F, 0x2F, 0x6D, 0x79, 0x2E, 0x68, 0x6F, 0x73, 0x74,
		0x2E, 0x6E, 0x61, 0x6D, 0x65, 0x2F, 0x30, 0x0D, 0x06, 0x09, 0x2A, (byte)0x86, 0x48, (byte)0x86, (byte)0xF7, 0x0D,
		0x01, 0x01, 0x0B, 0x05, 0x00, 0x03, (byte)0x82, 0x01, 0x01, 0x00, 0x5E, (byte)0xB4, 0x46, 0x72, 0x7E, (byte)0xB6,
		(byte)0xE3, 0x6C, 0x0E, (byte)0xD7, 0x78, 0x2E, (byte)0xCB, 0x79, 0x20, (byte)0x9F, 0x14, (byte)0xA4, 0x73, 0x59, 0x6C, 0x5B,
		(byte)0x97, 0x1C, (byte)0xC3, 0x7F, 0x31, 0x6E, 0x4B, 0x35, (byte)0xD7, (byte)0x91, (byte)0xDB, 0x7F, 0x6E, 0x67, (byte)0xD4, 0x13,
		(byte)0xD7, 0x5B, 0x7E, 0x5D, 0x3F, 0x4F, 0x1E, (byte)0xBC, 0x09, (byte)0xB6, (byte)0x96, (byte)0xA0, 0x63, 0x19, (byte)0xFE, (byte)0xE3,
		(byte)0x92, 0x12, (byte)0x92, (byte)0xC0, 0x4E, 0x2C, (byte)0xC4, (byte)0xBE, 0x51, 0x28, (byte)0xAE, (byte)0xB2, (byte)0xFF, 0x2F, 0x3F, 0x0F,
		0x76, 0x33, (byte)0xAF, 0x54, 0x73, 0x74, 0x3A, (byte)0x8A, 0x60, (byte)0xB7, 0x3D, 0x3E, 0x53, (byte)0x9D, (byte)0xA2, 0x62,
		0x12, (byte)0xBE, 0x1B, 0x02, (byte)0xE9, (byte)0xE5, 0x19, (byte)0xDA, 0x1D, (byte)0xCB, 0x0A, 0x3B, 0x1C, 0x30, 0x2B, 0x17,
		0x38, 0x2B, 0x37, (byte)0xA8, (byte)0xF5, 0x58, 0x72, 0x39, (byte)0xAB, 0x6A, 0x7E, (byte)0xFA, 0x2D, (byte)0x8E, 0x70, (byte)0xCA,
		0x06, 0x66, 0x46, 0x64, (byte)0xE8, (byte)0x8E, 0x17, 0x33, 0x4C, (byte)0xF9, 0x47, 0x12, (byte)0xB8, (byte)0xE7, 0x2B, (byte)0xD5,
		(byte)0xCC, 0x7F, 0x49, 0x3F, 0x24, (byte)0xCF, 0x72, 0x13, (byte)0xCD, 0x6A, (byte)0x96, (byte)0x97, (byte)0x8D, (byte)0x89, (byte)0x9A, 0x7F,
		(byte)0x8A, (byte)0xE2, 0x26, 0x51, (byte)0xF1, (byte)0xA5, (byte)0xC0, (byte)0xC4, (byte)0xA5, (byte)0xAD, (byte)0xCE, (byte)0xAE, 0x30, (byte)0xE4, 0x11, 0x70,
		(byte)0xD7, (byte)0xA9, (byte)0x92, (byte)0xC5, (byte)0x8B, 0x4D, 0x66, (byte)0xB3, (byte)0xF5, 0x25, (byte)0x9D, 0x08, 0x4B, (byte)0x90, 0x12, (byte)0x83,
		(byte)0xA9, (byte)0x9F, (byte)0x95, 0x74, 0x6D, (byte)0xE2, (byte)0x82, (byte)0xE1, 0x25, (byte)0xAD, 0x7C, 0x54, (byte)0xD5, (byte)0xE4, 0x34, (byte)0xC6,
		(byte)0x8C, (byte)0xFF, 0x3B, 0x47, (byte)0xE9, (byte)0xB8, 0x3E, (byte)0xDD, (byte)0xB7, (byte)0xCB, (byte)0xF3, 0x43, 0x54, 0x0D, (byte)0xD8, (byte)0xFE,
		(byte)0xAD, 0x7A, (byte)0x87, (byte)0xCE, (byte)0xCC, (byte)0xDF, 0x36, 0x25, 0x2D, (byte)0xEA, (byte)0xC7, 0x52, 0x3F, 0x7A, 0x61, (byte)0xD6,
		0x7E, (byte)0xEC, 0x50, (byte)0xDC, (byte)0xD9, 0x6A, (byte)0x93, 0x0A, 0x08, 0x1D, (byte)0xB8, 0x35, 0x5A, 0x1A, 0x4A, 0x39,
		0x0F, 0x71, (byte)0xCF, 0x22, (byte)0xAC, (byte)0xEB, 0x52, (byte)0xC2, 0x13, (byte)0xFB
	};
	private static boolean encryptTest()
	{
		boolean ret = false;
		System.out.print("CMSEnvelolpedData encryption document test... ");
		try
		{
			final NharuX509Certificate cert = NharuX509Factory.generateCertificate(RECIP_CERT);
			try
			{
				try
				{
					final CMSEnvelopedDataBuilder builder = new CMSEnvelopedDataBuilder(PLAIN_TEXT);
					try
					{
						builder.encrypt("DESede", 24, "DESede-CBC");
						builder.addKeyTransRecip(cert, "OAEPPadding");
						final byte[] encoding = builder.encode();
						
						final NharuKeyStore store = NharuKeyStore.getInstance();
						try
						{
							final CMSEnvelopedData document = new CMSEnvelopedData(encoding);
							try
							{
								try
								{
									if (!NharuArrays.equals(PLAIN_TEXT, document.decrypt(store))) throw new RuntimeException("Encrypted document does not match");
									System.out.println("Done!");
									ret = true;
								}
								catch (final CMSException e) { e.printStackTrace(); }
							} 
							finally { document.releaseDocument(); }
						}
						finally { store.releaseObject(); }
					}
					catch (final CMSEncryptException | NoSuchAlgorithmException | KeyStoreException | UnrecoverableKeyException e) { e.printStackTrace(); }
					finally { builder.releaseBuilder(); }
				}
				catch (final CMSParsingException e) { e.printStackTrace(); }
			}
			finally { cert.closeHandle(); }
		}
		catch (final CertificateException e) { e.printStackTrace(); }
		return ret;
	}

	private static final String MIME = 
		"MIAGCSqGSIb3DQEHAqCAMIACAQExCzAJBgUrDgMCGgUAMIAGCSqGSIb3DQEHAQAAMYICKTCCAiUC\r\n" +
		"AQEwdzByMQswCQYDVQQGEwJCUjETMBEGA1UEChMKUEtJIEJyYXppbDEfMB0GA1UECxMWUEtJIFJ1\r\n" +
		"bGVyIGZvciBBbGwgQ2F0czEtMCsGA1UEAxMkQ29tbW9uIE5hbWUgZm9yIEFsbCBDYXRzIEVuZCBV\r\n" +
		"c2VyIENBAgEBMAkGBSsOAwIaBQCggYgwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG\r\n" +
		"9w0BCQUxDxcNMTYwNzI1MTMzNTM0WjAjBgkqhkiG9w0BCQQxFgQUQh5rOzgG0bqy9AdfWc2GCeW9\r\n" +
		"fJUwKQYJKoZIhvcNAQk0MRwwGjAJBgUrDgMCGgUAoQ0GCSqGSIb3DQEBAQUAMA0GCSqGSIb3DQEB\r\n" +
		"AQUABIIBAC8VRFKb470sH5rUYnC5cS/paV110CTzd6OwP975CxcWMTIDhpbCID2Q6fcHtXwhJOG/\r\n" +
		"oHPzz8PYopkll1jRhjyTioPBWFCV2uKSacS2v5twC0ZoeXuBURCopMopzYwolQH3L6loSAnNGqqh\r\n" +
		"OI8IkhJz3nEI218M23GyFFI+XpOiob83I4IhRfD5sY24NvJ6A8182yxT1INbAjv4mcw4TOyutL+y\r\n" +
		"IkqJGCZs5QSDlAm8Zzof25U3XIZ0eVFjPoIKh5Jvz/xOWhmTvEF7Og0zeQCZ1dKfDyrLpJiX9WDr\r\n" +
		"KFt1UNw95yfUh+KOngCtJZ2TtXAOSwtRjUIde5l6OJwXN5AAAAAAAAA=";
	private static final String CRLF = "\r\n";
	private static final String SIGNED =
		"Content-Type: application/EDIFACT" + CRLF +
		"Content-Transfer-Encoding: 8bit" + CRLF +
		"Content-Disposition: Attachment; filename=\"message.edi\"" + CRLF +
		CRLF +
		"UNA:+,? '" + CRLF +
		"UNB+UNOA:2+FHPEDAL+HUBERGMBH+990802:1557+9908021557'" + CRLF +
		"UNH+INVOIC0001+INVOIC:D:93A:UN'" + CRLF +
		"BGM+380+9908001+9'" + CRLF +
		"DTM+3:19990802:102'" + CRLF +
		"RFF+ON:O0010001'" + CRLF +
		"DTM+4:19999715:102'" + CRLF +
		"NAD+SE++Fahrradhandel Pedal++Wagingerstr. 5+München++81549'" + CRLF +
		"NAD+BY++Huber GmbH++Obstgasse 2+München++81549'" + CRLF +
		"LIN+1++4711.001'" + CRLF +
		"IMD+F++:::Fahrrad, Damen'" + CRLF +
		"QTY+47:1:PCE'" + CRLF +
		"MOA+66:750'" + CRLF +
		"PRI+AAA:750'" + CRLF +
		"LIN+2++4711.002'" + CRLF +
		"IMD+F++:::Luftpumpe, Stand-'" + CRLF +
		"QTY+47:1:PCE'" + CRLF +
		"MOA+66:19,9'" + CRLF +
		"PRI+AAA:19,9'" + CRLF +
		"LIN+3++4711.003'" + CRLF +
		"IMD+F++:::Ersatzventil'" + CRLF +
		"QTY+47:3:PCE'" + CRLF +
		"MOA+66:7,5'" + CRLF +
		"PRI+AAA:2,5'" + CRLF +
		"UNS+S'" + CRLF +
		"MOA+79:777,4'" + CRLF +
		"MOA+124:124,38'" + CRLF +
		"MOA+128:901,78'" + CRLF +
		"TAX+7+VAT+++:::16+S'" + CRLF +
		"UNT+28+INVOIC0001'" + CRLF +
		"UNZ+1+9908021557'" + CRLF + CRLF;
	private static final String SIGNER =
		"-----BEGIN CERTIFICATE-----" +
		"MIIFGTCCBAGgAwIBAgIBATANBgkqhkiG9w0BAQsFADByMQswCQYDVQQGEwJCUjET" +
		"MBEGA1UEChMKUEtJIEJyYXppbDEfMB0GA1UECxMWUEtJIFJ1bGVyIGZvciBBbGwg" +
		"Q2F0czEtMCsGA1UEAxMkQ29tbW9uIE5hbWUgZm9yIEFsbCBDYXRzIEVuZCBVc2Vy" +
		"IENBMB4XDTE2MDcxMjE3MzgwNFoXDTE3MDcxMjE3MzgwNFowTzELMAkGA1UEBhMC" +
		"QlIxEzARBgNVBAoTClBLSSBCcmF6aWwxHzAdBgNVBAsTFlBLSSBSdWxlciBmb3Ig" +
		"QWxsIENhdHMxCjAIBgNVBAMTATEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK" +
		"AoIBAQDknj+IJSxPHbUCssNMIPjJvPjM/oeS37YIlrZITifOa7z8uxNeMIHpKq0/" +
		"1mib03PHWgjccyp8BEZk/3Vf8pL4TtmWF8H1tRgna/FVR48DMu1Kts05wTw7hBMG" +
		"x3qBLIXijYJey4fOPQ60ygPmfeDaZ0NoqeRC0LDnbIPjzofwCO4hyvElXv05vQaq" +
		"AfWDxKwGxBi9Tkd+jRHE8x0n6Yz6zHvASmmyE2fm6X34qTBPAFfapkH0wbhmobcO" +
		"He5ui1ykDz1mhF7BcBbb3Q4IPbF2ButJ8kphg5hrfatoIPTk8w/1XS1GZ7U9H1H9" +
		"PMzVG6FYQOYY4KfN25edssIoUNAdAgMBAAGjggHbMIIB1zALBgNVHQ8EBAMCBeAw" +
		"KQYDVR0lBCIwIAYIKwYBBQUHAwIGCCsGAQUFBwMEBgorBgEEAYI3FAICMB0GA1Ud" +
		"DgQWBBRSApFIZJsY7MmXmR419IKniXsZcjAfBgNVHSMEGDAWgBS/t1eTgi7zYUIj" +
		"ejSY8mVIlv4eqjCBjAYDVR0RBIGEMIGBoBkGBWBMAQMDoBAEDjM5MDE2MTExODg5" +
		"MjIyoBcGBWBMAQMHoA4EDDcyMTY0MjMzMzcyOKAMBgVgTAEDAqADBAExoD0GBWBM" +
		"AQMEoDQEMjA4MTIxOTg3NTAwMzMzMTYyMjM2NTM2NzM3NTY1OTAyNzAxMTU1MjU1" +
		"MTA3M0RJS1JKMGYGA1UdIARfMF0wWwYGYEwBAgMIMFEwTwYIKwYBBQUHAgEWQ2h0" +
		"dHA6Ly9jZXJ0aWZpY2Fkb2RpZ2l0YWwuY2FpeGEuZ292LmJyL2RvY3VtZW50b3Mv" +
		"ZHBjYWMtY2FpeGFwZi5wZGYwLAYDVR0fBCUwIzAhoB+gHYYbaHR0cDovL2xvY2Fs" +
		"aG9zdC9hYy9lbmQuY3JsMDgGCCsGAQUFBwEBBCwwKjAoBggrBgEFBQcwAoYcaHR0" +
		"cDovL2xvY2FsaG9zdC9hYy9lbmQuaHRtbDANBgkqhkiG9w0BAQsFAAOCAQEAKpZD" +
		"X0qRYcw3ZgTY3660+xgeaEM6qdx8hQv2c986YbaRgJ8VQ3bqfCfJ4FsrBfFagt2P" +
		"STCnAW4tOkhhfYdXDAPzCZcm4WUih+zHLFNSYFaUxYp/dK5vc6NsYSmyO7l0Prn9" +
		"vsBONngnTSnOA2cMkQaumDy8zzK3K4JyAKPG0FtDzIkDSVUkxLJSHXBOiRAhV+GE" +
		"o0B6XhM+ueInZUhSL9LeG6qI5ZtP0nvBLeWniEKGfPC1NZutdUdb3dLLToR10NV+" +
		"zcVF4IR872/AgZDqIRZ9lLB1f2Ka2Y82iaZJ6Th7LndbVQLtpMhRafhSxcLyzF4R" +
		"pJBJXquUBk2vrQ/bBw==" +
		"-----END CERTIFICATE-----";
	private static boolean indefiniteFormTest()
	{
		boolean ret = false;
		System.out.print("CMSSignedData indefinite length form parsing test... ");
		CMSSignedData doc;
		try
		{
			doc = new CMSSignedData(NharuArrays.fromBase64(MIME.getBytes()));
			try
			{
				if (!doc.hasCertificatesAttached())
				{
					doc.verfiy(SIGNED.getBytes(), new CertificateResolver()
					{
						@Override
						public X509Certificate getCertificate(final SignerIdentifier signer)
						{
							final IssuerAndSerialNumber sid = signer.getIssuer();
							if (sid == null) return null;
							try
							{
								final NharuX509Certificate cert = NharuX509Factory.generateCertificate(SIGNER.getBytes());
								final IssuerAndSerialNumber issuer = new IssuerAndSerialNumber(cert.getIssuer(), cert.getSerial());
								if (sid.equals(issuer)) return cert;
							}
							catch (final CertificateException e) { e.printStackTrace(); return null; }
							return null;
						}
					});
					System.out.println("Done!");
					ret = true;
				}
				else System.out.println("Failed because CMS has certificates attached");
			}
			catch (final CMSSignatureException | CMSInvalidAttributesException | CertificateException e) { e.printStackTrace(); }
			finally { doc.releaseDocument(); }
		}
		catch (final CMSParsingException e) { e.printStackTrace(); }
		return ret;
	}

	public static void main(final String[] args)
	{
		boolean success = parsingTest();
		if (success) success = certsP7BTest();
		if (success) success = generateTest();
		if (success) success = parsingOpenSSLEnvelopedTest();
		if (success) success = encryptTest();
		if (success) success = indefiniteFormTest();
	}
}
